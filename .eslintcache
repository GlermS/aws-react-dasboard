[{"C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\index.js":"1","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\pages\\index.js":"2","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\components\\signup\\signup-form.js":"3","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\aws-exports.js":"4","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\components\\session-verifier.js":"5","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\components\\footer.js":"6","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\index.js":"7","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\components\\sideMenu\\index.js":"8","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\components\\loadingScreen\\index.js":"9","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\users\\index.js":"10","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\components\\createForm\\index.js":"11","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\calls\\calls-list\\index.js":"12","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\calls\\createCall\\index.js":"13","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\calls\\my-calls\\index.js":"14","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\themes\\list-themes\\index.js":"15","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\calls\\calls-list\\call-card.js":"16","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\themes\\list-themes\\theme-card.js":"17","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\calls\\edit-call\\index.js":"18","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\components\\card\\index.js":"19","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\meetings\\index.js":"20","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\meetings\\create-meetings.js":"21","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\meetings\\update-meetings.js":"22","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\utils\\meetings.js":"23","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\utils\\tags.js":"24","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\pages\\context.js":"25","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\users\\create-users.js":"26","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\users\\update-users.js":"27","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\utils\\users.js":"28"},{"size":538,"mtime":1627904460175,"results":"29","hashOfConfig":"30"},{"size":2144,"mtime":1629320631920,"results":"31","hashOfConfig":"30"},{"size":2055,"mtime":1611947121662,"results":"32","hashOfConfig":"30"},{"size":566,"mtime":1627905587342,"results":"33","hashOfConfig":"30"},{"size":509,"mtime":1611841467215,"results":"34","hashOfConfig":"30"},{"size":425,"mtime":1611945210617,"results":"35","hashOfConfig":"30"},{"size":3176,"mtime":1629891016649,"results":"36","hashOfConfig":"30"},{"size":1428,"mtime":1629288648845,"results":"37","hashOfConfig":"30"},{"size":902,"mtime":1629320886238,"results":"38","hashOfConfig":"30"},{"size":2838,"mtime":1629923033310,"results":"39","hashOfConfig":"30"},{"size":4111,"mtime":1627915319409,"results":"40","hashOfConfig":"30"},{"size":4139,"mtime":1612898518444,"results":"41","hashOfConfig":"30"},{"size":3023,"mtime":1615306720524,"results":"42","hashOfConfig":"30"},{"size":4588,"mtime":1614790890851,"results":"43","hashOfConfig":"30"},{"size":2610,"mtime":1616096866071,"results":"44","hashOfConfig":"30"},{"size":2516,"mtime":1614790117953,"results":"45","hashOfConfig":"30"},{"size":997,"mtime":1614792180483,"results":"46","hashOfConfig":"30"},{"size":7902,"mtime":1612881285757,"results":"47","hashOfConfig":"30"},{"size":3263,"mtime":1629893729315,"results":"48","hashOfConfig":"30"},{"size":3005,"mtime":1629320600854,"results":"49","hashOfConfig":"30"},{"size":1773,"mtime":1629320716509,"results":"50","hashOfConfig":"30"},{"size":1866,"mtime":1629293675694,"results":"51","hashOfConfig":"30"},{"size":2975,"mtime":1629316252333,"results":"52","hashOfConfig":"30"},{"size":2421,"mtime":1629294690241,"results":"53","hashOfConfig":"30"},{"size":107,"mtime":1629320282550,"results":"54","hashOfConfig":"30"},{"size":1758,"mtime":1629897246837,"results":"55","hashOfConfig":"30"},{"size":2406,"mtime":1629921923761,"results":"56","hashOfConfig":"30"},{"size":2964,"mtime":1629896865559,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1j3tols",{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"60"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"71"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"66"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"60"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"60"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"60"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"60"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"60"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\index.js",[],["128","129"],"C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\pages\\index.js",["130","131","132"],"import './style.css'\r\nimport { withCookies} from 'react-cookie';\r\nimport Dashboard from './dashboard'\r\nimport Footer from '../components/footer';\r\nimport {useState, useEffect } from 'react';\r\nimport SideMenu from '../components/sideMenu';\r\nimport Amplify, {Auth}  from 'aws-amplify';\r\nimport awsconfig from '../aws-exports';\r\nimport LoadingScreen from '../components/loadingScreen';\r\nimport LoadingContext from './context'\r\nAmplify.configure(awsconfig);\r\n\r\nfunction Home(props){\r\n  const [session, setSession] = useState({authToken:'', userId:''})\r\n  const [name, setName] = useState('')\r\n  const [role, setRole] = useState('admin')\r\n  const [isLoading, setIsLoading] = useState(false)\r\n\r\n  useEffect(()=>{\r\n    getToken();    \r\n  }, [session])\r\n\r\n  async function getToken(){\r\n    let sessionInfo = await Auth.currentSession()\r\n      if(session.authToken !== sessionInfo.idToken.jwtToken){\r\n        session.authToken = sessionInfo.idToken.jwtToken\r\n        setSession(session)\r\n      }\r\n     return session\r\n  }\r\n\r\n  const options = {\r\n    'client':[\r\n      {path:'/', text:'Principal'},\r\n      {path:'/meetings', text:'Meetings'}\r\n  ],\r\n    'moderator':[\r\n      {path:'/', text:'Principal'},\r\n      {path:'/meetings', text:'Meetings'}\r\n  ],\r\n    'admin':[\r\n      {path:'/', text:'Principal'},\r\n      {path:'/meetings', text:'Meetings'},\r\n      {path:'/users', text:'Users'},\r\n      {path:'/topics', text:'Topics'},\r\n      {path:'/tags', text:'Tags'}      \r\n  ],\r\n  }\r\n\r\n  \r\n  return (\r\n    \r\n    <div className=\"container\" id=\"home\">\r\n      {/* {this.redirect()} */}\r\n     \r\n      <SideMenu username={name} options ={options[role]}></SideMenu>\r\n      {/* logout={this.logoutFunc} */}\r\n      <LoadingContext.Provider value={{isLoading, setIsLoading}} className='content'>\r\n          <Dashboard auth = {role} username ={name} getToken={async ()=> await getToken()}/>\r\n          <LoadingScreen></LoadingScreen>\r\n      </LoadingContext.Provider>\r\n       \r\n      <Footer />\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\n\r\n\r\nexport default withCookies(Home);\r\n  \r\n/*\r\nHome.getInitialProps = async (ctx)=>{\r\n  const resp  =await verifySession(ctx);\r\n  return resp\r\n}*/\r\n","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\components\\signup\\signup-form.js",[],["133","134"],"C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\aws-exports.js",[],"C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\components\\session-verifier.js",[],["135","136"],"C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\components\\footer.js",[],"C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\index.js",["137"],"// import React from 'react'\r\nimport { withCookies, CookiesProvider} from 'react-cookie';\r\n// import CallsList from './calls/calls-list';\r\nimport {Switch, Route,withRouter} from 'react-router-dom'\r\nimport Meetings from './meetings';\r\nimport Users from './users';\r\n// import Users from './users';\r\n// import CreateCall from './calls/createCall';\r\n// import RegisterUser from './users/register-user';\r\n// import CreateForm from '../../components/createForm';\r\n// import ListThemes from './themes/list-themes';\r\nimport { withAuthenticator } from '@aws-amplify/ui-react';\r\nimport CreateMeetingForm from './meetings/create-meetings';\r\nimport {Auth}  from 'aws-amplify';\r\nimport {useEffect, useState} from 'react';\r\nimport UpdateMeetingForm from './meetings/update-meetings';\r\nimport CreateUserForm from './users/create-users';\r\nimport UpdateUserForm from './users/update-users';\r\n\r\n\r\nfunction Dashboard(props){\r\n    const [session, setSession] = useState({authToken:'', userId:''});\r\n\r\n    async function getToken(){\r\n        let sessionInfo = await Auth.currentSession()\r\n            if(session.authToken !== sessionInfo.idToken.jwtToken){\r\n            console.log('Update token')\r\n            session.authToken = sessionInfo.idToken.jwtToken\r\n            setSession(session)\r\n            }\r\n            return session\r\n        }\r\n    useEffect(()=>{\r\n        getToken()\r\n    },[session])\r\n\r\n    return (\r\n        <Switch>\r\n            \r\n\r\n            <Route path=\"/profile\">\r\n            <CookiesProvider>\r\n            </CookiesProvider>\r\n            </Route>\r\n\r\n            <Route path=\"/meetings\">\r\n                <Switch>\r\n                    <Route path=\"/meetings/create-meeting\">\r\n                        <CreateMeetingForm session={session}></CreateMeetingForm>\r\n                    </Route>\r\n\r\n                    <Route path=\"/meetings/update-meeting\">\r\n                        <UpdateMeetingForm session={session}></UpdateMeetingForm>\r\n                    </Route>\r\n\r\n                    <Route path=\"/meetings\">\r\n                        <Meetings  getToken={async ()=> await getToken()}/>\r\n                    </Route>\r\n                </Switch>\r\n            </Route>\r\n\r\n            <Route path=\"/users\">\r\n            <Switch>\r\n                    <Route path=\"/users/create-user\">\r\n                        <CreateUserForm session={session}></CreateUserForm>\r\n                    </Route>\r\n\r\n                    <Route path=\"/users/update-user\">\r\n                        <UpdateUserForm session={session}></UpdateUserForm>\r\n                    </Route>\r\n\r\n                    <Route path=\"/users\">\r\n                        <Users  getToken={async ()=> await getToken()}/>\r\n                    </Route>\r\n                </Switch>\r\n            </Route>\r\n\r\n            <Route path=\"/tags\">\r\n            </Route>\r\n            \r\n            <Route path=\"/topics\">\r\n            </Route>\r\n\r\n            <Route path=\"/\">\r\n            <CookiesProvider>\r\n                <Meetings getToken={async ()=> await getToken()} />\r\n            </CookiesProvider>\r\n            </Route>\r\n        </Switch>)\r\n    \r\n}\r\n\r\nexport default withAuthenticator(withRouter(withCookies(Dashboard)))","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\components\\sideMenu\\index.js",[],"C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\components\\loadingScreen\\index.js",[],"C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\users\\index.js",["138","139","140"],"C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\components\\createForm\\index.js",["141"],"import React from 'react'\r\nimport axios from 'axios'\r\nimport {withCookies} from 'react-cookie'\r\n// import moment from 'moment'\r\nimport './style.css'\r\n\r\n\r\n\r\nclass CreateForm extends React.Component{\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {fields: props.campos}\r\n      this.state['created'] = false\r\n      this.state['invalidData'] = false\r\n    }\r\n\r\n    loading = (isLoading)=>{\r\n      if(this.props.loading){\r\n          this.props.loading(isLoading);\r\n        }\r\n    }\r\n    \r\n    submitForm = async (event)=>{\r\n      event.preventDefault();\r\n      const { cookies } = this.props;\r\n      this.loading(true)\r\n      var data={}\r\n      Object.keys(this.state.fields).map((k)=>{data[k]=this.state.fields[k].value})\r\n      await axios({\r\n        url:process.env.REACT_APP_BACKEND_URI+'/api/adm'+this.props.path,\r\n        method: 'post',\r\n        data,\r\n        headers: {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        authToken: cookies.cookies.authToken\r\n      }\r\n      }).then((response) => {\r\n        // console.log(response)\r\n        \r\n        if(response.status===201){\r\n          this.setState({created:true, invalidData:false})\r\n         }else{\r\n        this.setState({created:false, invalidData:true})}\r\n      }).catch((error) => {\r\n        alert(\"Acesso não autorizado, apenas administradores podem criar chamadas. Por favor, faça o seu login novamente\")\r\n      this.setState({created:false, invalidData:false})\r\n    })  \r\n    this.loading(false)\r\n    }\r\n\r\n    componentDidMount = async ()=>{\r\n      // await this.listThemes()\r\n    }\r\n\r\n    invalidMessage = ()=>{\r\n      if(this.state.invalidData){\r\n        return<p>date ou senha não encontrados</p>\r\n      }\r\n    }\r\n\r\n    createdMessage = ()=>{\r\n      if(this.state.created){\r\n        return<p>A sua Call foi criada</p>\r\n      }\r\n    }\r\n\r\n    field = (name)=>{\r\n        var field = this.state.fields[name]\r\n        console.log(field)\r\n        if(field.type === 'input'){\r\n            // console.log('input')\r\n            return(\r\n                <label>\r\n                    <span>{field.label}</span>\r\n                    <input type = 'text' name = {name} value = {field.value} onChange ={(e)=>{field.value =e.target.value; this.setState({[name]:field})}}></input>\r\n                </label>\r\n            )\r\n        }else if(field.type === 'select'){\r\n          // console.log(field.values)\r\n            return(\r\n                \r\n                <label>\r\n                    <span>{field.label}</span>\r\n                    {/* <input type = {field.inputType} name = {name}  onChange ={(e)=>{field.value =e.target.value; this.setState({name:field})}}></input> */}\r\n                    <select value = {field.value} onChange ={(e)=>{field.value =e.target.value; this.setState({name:field})}}>\r\n                        <option value=''>- - Unknown - -</option>\r\n                        {field.values.map((val,index)=>{\r\n                            return <option value={val._id}>{val.title}</option>\r\n                        })}\r\n                    </select>\r\n                </label>\r\n            )\r\n        } else if(field.type === 'date'){\r\n          // console.log('input')\r\n          return(\r\n              <label>\r\n                  <span>{field.label}</span>\r\n                  <input type = 'datetime-local' name = \"date\" value = {this.state.date} onChange ={(e)=>{field.value =e.target.value; this.setState({name:field})}}></input>\r\n              </label>\r\n          )\r\n      } \r\n    }\r\n\r\n    render(){\r\n      let f = []\r\n      // console.log(this.props.campos)\r\n      if (this.props.campos){\r\n        let fi = this.props.campos\r\n        \r\n        f =Object.keys(fi).map((k)=>{return this.field(k)})\r\n      }\r\n      // console.log(f)\r\n      return(<div className=\"create\">\r\n          <form className =\"create-form\" >\r\n            {f}\r\n            <div>\r\n            <button type=\"submit\" onClick={this.submitForm}>Enviar</button>\r\n            </div>\r\n            {this.invalidMessage()}\r\n            {this.createdMessage()}\r\n          </form>\r\n        </div>);\r\n    }\r\n  }\r\n\r\n\r\n\r\n  export default withCookies(CreateForm);","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\calls\\calls-list\\index.js",[],"C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\calls\\createCall\\index.js",[],"C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\calls\\my-calls\\index.js",["142"],"import React from 'react'\r\nimport {withCookies} from 'react-cookie'\r\nimport Card from '../../../../components/card'\r\nimport './styles.css'\r\nimport moment from 'moment';\r\nimport axios from 'axios';\r\n\r\n  \r\nclass MyCalls extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            callsList:[],\r\n        }\r\n    }\r\n    loading = (isLoading)=>{\r\n        if(this.props.loading){\r\n            this.props.loading(isLoading);\r\n        }\r\n    }\r\n    \r\n    listUserCalls = async ()=>{\r\n        this.loading(true)\r\n        const {cookies} = this.props.cookies\r\n        const resp = await axios({\r\n            url:process.env.REACT_APP_BACKEND_URI+'/api/calls/mycalls',\r\n            method: 'get',\r\n            headers: {\"Access-Control-Allow-Origin\": \"*\", \"authToken\":cookies.authToken}\r\n            }).then((response) => {\r\n            //console.log(response);\r\n            \r\n            return {data: response.data, status: response.status}\r\n        \r\n        }).catch(error =>{\r\n            return {msg:error, status:401}\r\n        })\r\n        //console.log(resp)\r\n    \r\n        if(resp.data){\r\n            this.setState({callsList:resp.data})\r\n        }\r\n        this.loading(false)\r\n\r\n    }\r\n\r\n    componentDidMount= async() =>{\r\n        await this.listUserCalls()\r\n    }\r\n    participate = (link)=>{\r\n        if (link!=''){\r\n            return<a href={link}  target=\"_blank\" rel=\"noopener noreferrer\">Entrar na sala</a>\r\n    }}\r\n    myCallsRender = (calls)=>{\r\n        var callsComp = []\r\n        if(calls.client){\r\n            calls.client.forEach((call,i)=>{\r\n                var moderator = []\r\n                const date = moment(call.date)\r\n                var title = '';\r\n                if(call.theme){\r\n                    if(call.theme[0]){\r\n                        title = call.theme[0].title\r\n                    }\r\n                }\r\n                var link = ''\r\n                if(call.link){\r\n                    link = call.link\r\n                }\r\n\r\n                callsComp.push(\r\n\r\n                    <Card key={i}>\r\n                        <div className = \"card-content\">\r\n                        <div className = \"card-description\">\r\n                            <p className = \"call-theme\">{title}</p>\r\n                            {moderator}\r\n                            <p className = \"call-occupation\"><b>Ocupação:</b><span className=\"card-content-text\">{call.clients.length}</span></p>\r\n                            <p className = \"call-date\"><b>Data:</b><span className=\"card-content-text\">{date.format('DD/MM/YYYY')} às {date.format('HH:mm')}h</span></p>\r\n                            {this.participate(link)}\r\n                        </div>\r\n                        </div>\r\n                    </Card>\r\n                )\r\n            })\r\n        }\r\n\r\n        if(calls.moderator){\r\n            calls.moderator.forEach((call,i)=>{\r\n                const date = moment(call.date)\r\n                var title = '';\r\n                if(call.theme){\r\n                    if(call.theme[0]){\r\n                        title = call.theme[0].title\r\n                    }\r\n                }\r\n                var link = ''\r\n                if(call.link){\r\n                    link = call.link\r\n                }\r\n                callsComp.push(\r\n                    <Card key={\"M\"+i} moderator={true} >\r\n                        <div className = \"card-content\">\r\n                        <div className = \"card-description\">\r\n                            <p className = \"call-theme\">{title}</p>\r\n                            <p className = \"call-occupation\"><b>Ocupação:</b><span className=\"card-content-text\">{call.clients.length}</span></p>\r\n                            <p className = \"call-date\"><b>Data:</b><span className=\"card-content-text\">{date.format('DD/MM/YYYY')} às {date.format('HH:mm')}h</span></p>\r\n                            {this.participate(link)}\r\n                         </div>\r\n                       </div> \r\n                    </Card>\r\n                )\r\n            })\r\n        }\r\n        return callsComp\r\n    }\r\n    \r\n    render(){\r\n        // console.log(this.props.calls)\r\n        return(\r\n        <div className=\"my-calls scroll\">\r\n            <div className=\"my-calls-content\">\r\n               <h2 >Minhas Calls</h2>\r\n                <div className = \"calls-list\">\r\n                    {this.myCallsRender(this.state.callsList)}\r\n                </div> \r\n            </div>\r\n            {this.props.loadingscreen}\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withCookies(MyCalls);\r\n",["143","144"],"C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\themes\\list-themes\\index.js",["145"],"import React from 'react'\r\nimport axios from 'axios'\r\nimport ThemeCard from './theme-card'\r\nimport {withCookies} from 'react-cookie'\r\nimport './styles.css'\r\nimport { withAuthenticator, AmplifySignOut } from '@aws-amplify/ui-react';\r\n\r\nimport {Switch, Route} from 'react-router-dom'\r\n// import EditCall from '../edit-call'\r\n\r\n  \r\nclass ListThemes extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            themesList:[],\r\n        }\r\n    }\r\n\r\n    loading = (isLoading)=>{\r\n        if(this.props.loading){\r\n            this.props.loading(isLoading);\r\n        }\r\n    }\r\n\r\n    listThemes = async ()=>{\r\n        const {cookies} = this.props.cookies\r\n        this.loading(true)\r\n        const resp = await axios({\r\n          url:process.env.REACT_APP_BACKEND_URI+'/api/adm/themes',\r\n          method: 'get',\r\n          headers: {\"Access-Control-Allow-Origin\": \"*\", \"authToken\":cookies.authToken}\r\n          }).then((response) => {\r\n            //   console.log(response)\r\n            return {data: response.data, status: response.status}\r\n      \r\n        }).catch(error =>{\r\n          return {msg:error, status:401}\r\n        })\r\n        console.log(resp)\r\n        if(resp.data){\r\n            this.setState({themesList:resp.data})\r\n        }\r\n        this.loading(false)\r\n      }\r\n\r\n    componentDidMount = async ()=>{\r\n        await this.listThemes()\r\n    }\r\n\r\n    availableThemesRender = (themes)=>{\r\n        var themesComp = []\r\n        if(themes){\r\n            themes.forEach((theme,i)=>{\r\n                themesComp.push(\r\n                    <ThemeCard data={theme} keys={i.toString()} key={i.toString()} auth={this.props.auth} choose={this.refresh} loading={this.loading}/>\r\n                )\r\n            })\r\n        }\r\n        \r\n        return themesComp;\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n        <div className =\"available-calls scroll\">\r\n            <Switch>\r\n                {/* <Route path='/available-calls/:id'>\r\n                    <EditCall update={this.listCalls} loading={this.loading}></EditCall>\r\n                </Route> */}\r\n                <Route path='/list-themes'>\r\n                    <div className=\"calls-list-container\">\r\n                        <h2>Temas disponíveis</h2>\r\n                        <div className = \"calls-list\">\r\n                            {this.availableThemesRender(this.state.themesList)}\r\n                        </div>\r\n                    </div>\r\n                </Route>\r\n            </Switch>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withAuthenticator(withCookies(ListThemes));\r\n","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\calls\\calls-list\\call-card.js",[],"C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\themes\\list-themes\\theme-card.js",[],"C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\calls\\edit-call\\index.js",[],"C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\components\\card\\index.js",["146","147","148"],"import {Link} from 'react-router-dom'\r\nimport { deleteMeeting } from '../../utils/meetings'\r\nimport './style.css'\r\n\r\nfunction Card(props){\r\n    const updateButton = ()=>{\r\n        if (props.updatePath){\r\n            return <Link to={{\r\n                pathname: props.updatePath,\r\n                search: \"?id=\"+props.cardId\r\n            }}>update</Link>\r\n        }\r\n    }\r\n    const deleteButton = ()=>{\r\n        if (props.deleteFunc){\r\n            return <button onClick={(e)=>{\r\n                e.preventDefault();\r\n                props.deleteFunc();\r\n            }}>delete</button>\r\n        }\r\n    }\r\n    const joinButton = ()=>{\r\n        if (props.joinFunc){\r\n            return <button onClick={(e)=>{\r\n                e.preventDefault();\r\n                props.joinFunc();\r\n            }}>Join</button>\r\n        }\r\n    }\r\n\r\n    switch (props.type) {\r\n        case 'user':\r\n            return(\r\n                <div className = 'card' >\r\n                    <div className='card-header'>\r\n                        <h3>{props.name}</h3>\r\n                    </div>\r\n                    <div className='card-body'>\r\n                    {props.fields.map((val, i )=>{\r\n                        // console.log(val, i)\r\n                        return renderField(val, i)\r\n                    })}\r\n                    </div>\r\n                    <div className='card-footer'>\r\n                        {updateButton()}\r\n                        {deleteButton()}\r\n                    </div>\r\n                </div>\r\n            )\r\n          break;\r\n\r\n        case 'meeting':\r\n            return(\r\n                <div className = 'card' >\r\n                    <div className='card-header'>\r\n                        <h3>{props.tag}</h3>\r\n                    </div>\r\n                    <div className='card-body'>\r\n                    {props.fields.map((val, i )=>{\r\n                        // console.log(val, i)\r\n                        return renderField(val, i)\r\n                    })}\r\n                    </div>\r\n                    <div className='card-footer'>\r\n                        {joinButton()}\r\n                        {updateButton()}\r\n                        {deleteButton()}\r\n                    </div>\r\n                </div>\r\n            )\r\n          break;\r\n        default:\r\n            return(\r\n                <div className = 'card' >\r\n                    <div className='card-header'>\r\n                        <h3>{props.tag}</h3>\r\n                    </div>\r\n                    <div className='card-body'>\r\n                    {props.fields.map((val, i )=>{\r\n                        // console.log(val, i)\r\n                        return renderField(val, i)\r\n                    })}\r\n                    </div>\r\n                    <div className='card-footer'>\r\n                        {joinButton()}\r\n                        {updateButton()}\r\n                        {deleteButton()}\r\n                    </div>\r\n                </div>\r\n            )\r\n      }\r\n      \r\n   \r\n}\r\n\r\nexport default Card\r\n\r\nconst renderField = (field, key) =>{\r\n    return(\r\n        <div className = 'field' key ={key}>\r\n            <b className = 'label'>{field.label}</b>\r\n            <span className = 'value'>{field.value}</span>\r\n        </div>\r\n    )\r\n}","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\meetings\\index.js",["149","150","151"],"import {useState, useEffect, useContext } from 'react';\r\nimport axios from 'axios'\r\nimport {Auth}  from 'aws-amplify';\r\nimport Card from '../../../components/card';\r\nimport {Link} from 'react-router-dom'\r\nimport {withRouter} from 'react-router-dom'\r\nimport { deleteMeeting, listMeetings, joinMeeting } from '../../../utils/meetings';\r\nimport moment from 'moment';\r\nimport './style.css';\r\nimport LoadingContext from '../../context';\r\n\r\n\r\nfunction Meetings(props){\r\nconst [meetings, setMeetings] = useState([])\r\nconst [update, setUpdate] = useState(true)\r\nconst [session, setSession] = useState({authToken:'', userId:''})\r\nconst {isLoading, setIsLoading} = useContext(LoadingContext)\r\n\r\nconst updateFunc = async()=>{\r\n    await getToken()\r\n    const response = await listMeetings(session)\r\n    if(response.status===200){\r\n        const mts = response.data.map(element => {\r\n            const {id, subscribed_users, start, tag} = element\r\n            return {\r\n                meetingId: id,\r\n                users: subscribed_users,\r\n                start,\r\n                tag\r\n            }\r\n        });\r\n        if(meetings!==mts){\r\n            setMeetings(mts)\r\n        }\r\n        \r\n    }\r\n    \r\n}\r\n\r\n\r\nasync function getToken(){\r\n    let sessionInfo = await Auth.currentSession()\r\n        if(session.authToken !== sessionInfo.idToken.jwtToken){\r\n        console.log('Update token')\r\n        session.authToken = sessionInfo.idToken.jwtToken\r\n        setSession(session)\r\n        }\r\n        return session\r\n    }\r\n\r\nuseEffect(()=>{\r\n    if(update){\r\n        setIsLoading(true);\r\n        updateFunc();\r\n        setUpdate(false);\r\n        setIsLoading(false)\r\n    }\r\n})\r\n\r\nreturn(\r\n    <div className=\"my-calls scroll section\">\r\n    <div className=\"subheader\">\r\n        <h2 >Available Calls</h2>\r\n        <Link className='create-button' to='/meetings/create-meeting'>New meeting</Link>\r\n    </div>\r\n    <div className=\"my-calls-content\">\r\n        <div className = \"calls-list\">\r\n            {\r\n                meetings.map((meeting, i) =>{\r\n                    let meetingId = meeting.meetingId\r\n                    let startTime = moment(meeting.start)\r\n                    console.log(meeting)\r\n                    return (\r\n                        <Card tag = {meeting.tag} cardId = {meetingId} updatePath='/meetings/update-meeting' fields={[\r\n                            {label: 'Incriptions', value: meeting.users? meeting.users.length:0},\r\n                            {label: 'Date', value: startTime.format(\"DD/MM/YYYY\")},\r\n                            {label: 'Start', value: startTime.format(\"h:mm\")},\r\n                        ]\r\n                        } key ={i} deleteFunc={async()=>{await deleteMeeting(session, {meetingId}); updateFunc()}} joinFunc={async ()=>{await joinMeeting(session, {meetingId}); updateFunc()}}></Card>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n         \r\n    </div>         \r\n    </div>\r\n)\r\n}\r\n\r\nexport default withRouter(Meetings)\r\n\r\n  ","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\meetings\\create-meetings.js",["152"],"import { useContext, useEffect, useState } from 'react'\r\nimport {postMeeting} from  '../../../utils/meetings'\r\nimport moment from 'moment'\r\nimport { listTags } from '../../../utils/tags'\r\nimport LoadingContext from '../../context'\r\n\r\nfunction CreateMeetingForm(props){\r\n    const [tag, setTag] = useState('presentation')\r\n    const [start, setStart] = useState(moment().format('YYYY-MM-DDTh:mm:ss'))\r\n    const [tagsList, setTagsList] = useState([])\r\n    const {setIsLoading} = useContext(LoadingContext)\r\n    useEffect(()=>{\r\n        setIsLoading(true)\r\n        listTags(props.session).then((response)=>{\r\n            setTagsList(response.data)\r\n        }).catch((error)=>{\r\n            console.log(error)\r\n        })\r\n        setIsLoading(false)\r\n    },[])\r\n    const opionsList = ()=>{\r\n        return tagsList.map((tag)=>{\r\n            console.log(tag);\r\n            return <option value={tag.id}>{tag.tag_name}</option>\r\n        })\r\n    }\r\n    return(\r\n        <div className=\"create\">\r\n            <h1>Create a new call</h1>\r\n            <form className =\"create-form\" >\r\n                <label>\r\n                    <span>Tag:</span>\r\n                    <select name=\"tag\" id=\"tags\" onChange={(e)=>{setTag(e.target.value)}} value={tag}>\r\n                        {opionsList()}\r\n                    </select>\r\n                </label>\r\n                <label>\r\n                    <span>Start</span>\r\n                    <input type='datetime-local' value={start} onChange={(e)=>{setStart(e.target.value)}}></input>\r\n                </label>\r\n                <button type=\"submit\" onClick={(e)=>{e.preventDefault();postMeeting(props.session, {tag, start})}}>Enviar</button>\r\n            </form>\r\n        </div>);\r\n}\r\n\r\n\r\n\r\nexport default CreateMeetingForm;\r\n\r\n  \r\n\r\n","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\meetings\\update-meetings.js",["153"],"import { useEffect, useState } from 'react'\r\nimport {getMeeting, updateMeeting} from  '../../../utils/meetings'\r\nimport {useLocation} from \"react-router-dom\";\r\nimport moment from 'moment'\r\n\r\nfunction UpdateMeetingForm(props){\r\n    const [tag, setTag] = useState('presentation')\r\n    const [start, setStart] = useState(moment().format('YYYY-MM-DDTh:mm:ss'))\r\n    const meetingId = useQuery().get('id')\r\n\r\n    useEffect(()=>{\r\n        getMeeting(props.session, {meetingId}).then((response)=>{\r\n            console.log(response.data)\r\n            setTag(response.data.tag);\r\n            setStart(response.data.start);\r\n        }).catch((error)=>{\r\n            console.log(error)\r\n        });\r\n        \r\n    }, [])\r\n    // console.log(tag)\r\n    // console.log(start)\r\n    // console.log(id)\r\n\r\n    return(\r\n        <div className=\"create\">\r\n            <h1>Update a new call</h1>\r\n            <form className =\"create-form\" >\r\n                <label>\r\n                    <span>Tag:</span>\r\n                    <select name=\"tag\" id=\"tags\" onChange={(e)=>{setTag(e.target.value)}} value={tag}>\r\n                        <option value=\"test\">test</option>\r\n                        <option value=\"sport\">sport</option>\r\n                        <option value=\"presentation\">presentation</option>\r\n                    </select>\r\n                </label>\r\n                <label>\r\n                    <span>Start</span>\r\n                    <input type='datetime-local' value={start} onChange={(e)=>{setStart(e.target.value)}}></input>\r\n                </label>\r\n                <button type=\"submit\" onClick={(e)=>{e.preventDefault();updateMeeting(props.session, {meetingId, tag, start})}}>Enviar</button>\r\n            </form>\r\n        </div>);\r\n}\r\n\r\n\r\n\r\nexport default UpdateMeetingForm;\r\n\r\nfunction useQuery() {\r\n  return new URLSearchParams(useLocation().search);\r\n}  \r\n\r\n","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\utils\\meetings.js",[],"C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\utils\\tags.js",[],"C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\pages\\context.js",[],"C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\users\\create-users.js",["154"],"import { useContext, useEffect, useState } from 'react'\r\nimport {postUser} from  '../../../utils/users'\r\nimport moment from 'moment'\r\nimport { listTags } from '../../../utils/tags'\r\nimport LoadingContext from '../../context'\r\n\r\nfunction CreateUserForm(props){\r\n    const [tag, setTag] = useState('presentation')\r\n    const [start, setStart] = useState(moment().format('YYYY-MM-DDTh:mm:ss'))\r\n    const [tagsList, setTagsList] = useState([])\r\n    const {setIsLoading} = useContext(LoadingContext)\r\n    useEffect(()=>{\r\n        setIsLoading(true)\r\n        listTags(props.session).then((response)=>{\r\n            setTagsList(response.data)\r\n        }).catch((error)=>{\r\n            console.log(error)\r\n        })\r\n        setIsLoading(false)\r\n    },[])\r\n    const opionsList = ()=>{\r\n        return tagsList.map((tag)=>{\r\n            console.log(tag);\r\n            return <option value={tag.id}>{tag.tag_name}</option>\r\n        })\r\n    }\r\n    return(\r\n        <div className=\"create\">\r\n            <h1>Create a new call</h1>\r\n            <form className =\"create-form\" >\r\n                <label>\r\n                    <span>Tag:</span>\r\n                    <select name=\"tag\" id=\"tags\" onChange={(e)=>{setTag(e.target.value)}} value={tag}>\r\n                        {opionsList()}\r\n                    </select>\r\n                </label>\r\n                <label>\r\n                    <span>Start</span>\r\n                    <input type='datetime-local' value={start} onChange={(e)=>{setStart(e.target.value)}}></input>\r\n                </label>\r\n                <button type=\"submit\" onClick={(e)=>{e.preventDefault();postUser(props.session, {tag, start})}}>Enviar</button>\r\n            </form>\r\n        </div>);\r\n}\r\n\r\n\r\n\r\nexport default CreateUserForm;\r\n\r\n  \r\n\r\n","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\users\\update-users.js",["155","156","157"],"C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\utils\\users.js",[],{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","severity":1,"message":"163","line":15,"column":16,"nodeType":"164","messageId":"165","endLine":15,"endColumn":23},{"ruleId":"162","severity":1,"message":"166","line":16,"column":16,"nodeType":"164","messageId":"165","endLine":16,"endColumn":23},{"ruleId":"167","severity":1,"message":"168","line":21,"column":6,"nodeType":"169","endLine":21,"endColumn":15,"suggestions":"170"},{"ruleId":"158","replacedBy":"171"},{"ruleId":"160","replacedBy":"172"},{"ruleId":"158","replacedBy":"173"},{"ruleId":"160","replacedBy":"174"},{"ruleId":"167","severity":1,"message":"168","line":35,"column":7,"nodeType":"169","endLine":35,"endColumn":16,"suggestions":"175"},{"ruleId":"162","severity":1,"message":"176","line":2,"column":8,"nodeType":"164","messageId":"165","endLine":2,"endColumn":13},{"ruleId":"162","severity":1,"message":"177","line":17,"column":8,"nodeType":"164","messageId":"165","endLine":17,"endColumn":17},{"ruleId":"167","severity":1,"message":"178","line":52,"column":1,"nodeType":"164","endLine":52,"endColumn":10,"suggestions":"179"},{"ruleId":"180","severity":1,"message":"181","line":28,"column":45,"nodeType":"182","messageId":"183","endLine":28,"endColumn":47},{"ruleId":"184","severity":1,"message":"185","line":50,"column":17,"nodeType":"186","messageId":"187","endLine":50,"endColumn":19},{"ruleId":"158","replacedBy":"188"},{"ruleId":"160","replacedBy":"189"},{"ruleId":"162","severity":1,"message":"190","line":6,"column":29,"nodeType":"164","messageId":"165","endLine":6,"endColumn":43},{"ruleId":"162","severity":1,"message":"191","line":2,"column":10,"nodeType":"164","messageId":"165","endLine":2,"endColumn":23},{"ruleId":"192","severity":1,"message":"193","line":50,"column":11,"nodeType":"194","messageId":"195","endLine":50,"endColumn":17},{"ruleId":"192","severity":1,"message":"193","line":71,"column":11,"nodeType":"194","messageId":"195","endLine":71,"endColumn":17},{"ruleId":"162","severity":1,"message":"176","line":2,"column":8,"nodeType":"164","messageId":"165","endLine":2,"endColumn":13},{"ruleId":"162","severity":1,"message":"177","line":17,"column":8,"nodeType":"164","messageId":"165","endLine":17,"endColumn":17},{"ruleId":"167","severity":1,"message":"178","line":51,"column":1,"nodeType":"164","endLine":51,"endColumn":10,"suggestions":"196"},{"ruleId":"167","severity":1,"message":"197","line":20,"column":7,"nodeType":"169","endLine":20,"endColumn":9,"suggestions":"198"},{"ruleId":"167","severity":1,"message":"199","line":20,"column":8,"nodeType":"169","endLine":20,"endColumn":10,"suggestions":"200"},{"ruleId":"167","severity":1,"message":"197","line":20,"column":7,"nodeType":"169","endLine":20,"endColumn":9,"suggestions":"201"},{"ruleId":"162","severity":1,"message":"202","line":9,"column":12,"nodeType":"164","messageId":"165","endLine":9,"endColumn":17},{"ruleId":"162","severity":1,"message":"203","line":10,"column":12,"nodeType":"164","messageId":"165","endLine":10,"endColumn":17},{"ruleId":"167","severity":1,"message":"204","line":30,"column":8,"nodeType":"169","endLine":30,"endColumn":10,"suggestions":"205"},"no-native-reassign",["206"],"no-negated-in-lhs",["207"],"no-unused-vars","'setName' is assigned a value but never used.","Identifier","unusedVar","'setRole' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getToken'. Either include it or remove the dependency array.","ArrayExpression",["208"],["206"],["207"],["206"],["207"],["209"],"'axios' is defined but never used.","'isLoading' is assigned a value but never used.","React Hook useEffect contains a call to 'setUpdate'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [update, setIsLoading, updateFunc] as a second argument to the useEffect Hook.",["210"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["206"],["207"],"'AmplifySignOut' is defined but never used.","'deleteMeeting' is defined but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode",["211"],"React Hook useEffect has missing dependencies: 'props.session' and 'setIsLoading'. Either include them or remove the dependency array.",["212"],"React Hook useEffect has missing dependencies: 'meetingId' and 'props.session'. Either include them or remove the dependency array.",["213"],["214"],"'email' is assigned a value but never used.","'start' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.session' and 'userId'. Either include them or remove the dependency array.",["215"],"no-global-assign","no-unsafe-negation",{"desc":"216","fix":"217"},{"desc":"216","fix":"218"},{"desc":"219","fix":"220"},{"desc":"219","fix":"221"},{"desc":"222","fix":"223"},{"desc":"224","fix":"225"},{"desc":"222","fix":"226"},{"desc":"227","fix":"228"},"Update the dependencies array to be: [getToken, session]",{"range":"229","text":"230"},{"range":"231","text":"230"},"Add dependencies array: [update, setIsLoading, updateFunc]",{"range":"232","text":"233"},{"range":"234","text":"233"},"Update the dependencies array to be: [props.session, setIsLoading]",{"range":"235","text":"236"},"Update the dependencies array to be: [meetingId, props.session]",{"range":"237","text":"238"},{"range":"239","text":"236"},"Update the dependencies array to be: [props.session, userId]",{"range":"240","text":"241"},[734,743],"[getToken, session]",[1374,1383],[1654,1654],", [update, setIsLoading, updateFunc]",[1667,1667],[755,757],"[props.session, setIsLoading]",[707,709],"[meetingId, props.session]",[746,748],[1044,1046],"[props.session, userId]"]