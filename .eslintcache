[{"C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\index.js":"1","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\pages\\index.js":"2","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\components\\signup\\signup-form.js":"3","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\aws-exports.js":"4","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\components\\session-verifier.js":"5","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\components\\footer.js":"6","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\index.js":"7","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\components\\sideMenu\\index.js":"8","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\components\\loadingScreen\\index.js":"9","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\users\\index.js":"10","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\components\\createForm\\index.js":"11","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\calls\\calls-list\\index.js":"12","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\calls\\createCall\\index.js":"13","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\calls\\my-calls\\index.js":"14","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\themes\\list-themes\\index.js":"15","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\calls\\calls-list\\call-card.js":"16","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\themes\\list-themes\\theme-card.js":"17","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\calls\\edit-call\\index.js":"18","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\components\\card\\index.js":"19","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\meetings\\index.js":"20","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\meetings\\create-meetings.js":"21","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\meetings\\update-meetings.js":"22","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\utils\\meetings.js":"23","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\utils\\tags.js":"24","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\pages\\context.js":"25","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\users\\create-users.js":"26","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\users\\update-users.js":"27","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\utils\\users.js":"28","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\topics\\update-topic.js":"29","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\topics\\create-topic.js":"30","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\topics\\index.js":"31","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\utils\\topics.js":"32","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\tags\\create-tag.js":"33","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\tags\\update-tag.js":"34","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\tags\\index.js":"35"},{"size":538,"mtime":1627904460175,"results":"36","hashOfConfig":"37"},{"size":2144,"mtime":1629320631920,"results":"38","hashOfConfig":"37"},{"size":2055,"mtime":1611947121662,"results":"39","hashOfConfig":"37"},{"size":566,"mtime":1627905587342,"results":"40","hashOfConfig":"37"},{"size":509,"mtime":1611841467215,"results":"41","hashOfConfig":"37"},{"size":425,"mtime":1611945210617,"results":"42","hashOfConfig":"37"},{"size":4514,"mtime":1629981759029,"results":"43","hashOfConfig":"37"},{"size":1428,"mtime":1629288648845,"results":"44","hashOfConfig":"37"},{"size":902,"mtime":1629320886238,"results":"45","hashOfConfig":"37"},{"size":2838,"mtime":1629923033310,"results":"46","hashOfConfig":"37"},{"size":4111,"mtime":1627915319409,"results":"47","hashOfConfig":"37"},{"size":4139,"mtime":1612898518444,"results":"48","hashOfConfig":"37"},{"size":3023,"mtime":1615306720524,"results":"49","hashOfConfig":"37"},{"size":4588,"mtime":1614790890851,"results":"50","hashOfConfig":"37"},{"size":2610,"mtime":1616096866071,"results":"51","hashOfConfig":"37"},{"size":2516,"mtime":1614790117953,"results":"52","hashOfConfig":"37"},{"size":997,"mtime":1614792180483,"results":"53","hashOfConfig":"37"},{"size":7902,"mtime":1612881285757,"results":"54","hashOfConfig":"37"},{"size":2791,"mtime":1629982370466,"results":"55","hashOfConfig":"37"},{"size":3005,"mtime":1629320600854,"results":"56","hashOfConfig":"37"},{"size":1773,"mtime":1629320716509,"results":"57","hashOfConfig":"37"},{"size":1866,"mtime":1629293675694,"results":"58","hashOfConfig":"37"},{"size":2975,"mtime":1629316252333,"results":"59","hashOfConfig":"37"},{"size":2953,"mtime":1629981600064,"results":"60","hashOfConfig":"37"},{"size":107,"mtime":1629320282550,"results":"61","hashOfConfig":"37"},{"size":1758,"mtime":1629897246837,"results":"62","hashOfConfig":"37"},{"size":2406,"mtime":1629921923761,"results":"63","hashOfConfig":"37"},{"size":2964,"mtime":1629896865559,"results":"64","hashOfConfig":"37"},{"size":2437,"mtime":1629980576897,"results":"65","hashOfConfig":"37"},{"size":1763,"mtime":1629924450591,"results":"66","hashOfConfig":"37"},{"size":2860,"mtime":1629980727215,"results":"67","hashOfConfig":"37"},{"size":2985,"mtime":1629979390298,"results":"68","hashOfConfig":"37"},{"size":1753,"mtime":1629981284091,"results":"69","hashOfConfig":"37"},{"size":2148,"mtime":1629982031961,"results":"70","hashOfConfig":"37"},{"size":2719,"mtime":1629982136397,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"1j3tols",{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"74"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"74"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"85"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"80"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"74"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"74"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"74"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"74"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"74"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"74"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"74"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"74"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\index.js",[],["159","160"],"C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\pages\\index.js",["161","162","163"],"import './style.css'\r\nimport { withCookies} from 'react-cookie';\r\nimport Dashboard from './dashboard'\r\nimport Footer from '../components/footer';\r\nimport {useState, useEffect } from 'react';\r\nimport SideMenu from '../components/sideMenu';\r\nimport Amplify, {Auth}  from 'aws-amplify';\r\nimport awsconfig from '../aws-exports';\r\nimport LoadingScreen from '../components/loadingScreen';\r\nimport LoadingContext from './context'\r\nAmplify.configure(awsconfig);\r\n\r\nfunction Home(props){\r\n  const [session, setSession] = useState({authToken:'', userId:''})\r\n  const [name, setName] = useState('')\r\n  const [role, setRole] = useState('admin')\r\n  const [isLoading, setIsLoading] = useState(false)\r\n\r\n  useEffect(()=>{\r\n    getToken();    \r\n  }, [session])\r\n\r\n  async function getToken(){\r\n    let sessionInfo = await Auth.currentSession()\r\n      if(session.authToken !== sessionInfo.idToken.jwtToken){\r\n        session.authToken = sessionInfo.idToken.jwtToken\r\n        setSession(session)\r\n      }\r\n     return session\r\n  }\r\n\r\n  const options = {\r\n    'client':[\r\n      {path:'/', text:'Principal'},\r\n      {path:'/meetings', text:'Meetings'}\r\n  ],\r\n    'moderator':[\r\n      {path:'/', text:'Principal'},\r\n      {path:'/meetings', text:'Meetings'}\r\n  ],\r\n    'admin':[\r\n      {path:'/', text:'Principal'},\r\n      {path:'/meetings', text:'Meetings'},\r\n      {path:'/users', text:'Users'},\r\n      {path:'/topics', text:'Topics'},\r\n      {path:'/tags', text:'Tags'}      \r\n  ],\r\n  }\r\n\r\n  \r\n  return (\r\n    \r\n    <div className=\"container\" id=\"home\">\r\n      {/* {this.redirect()} */}\r\n     \r\n      <SideMenu username={name} options ={options[role]}></SideMenu>\r\n      {/* logout={this.logoutFunc} */}\r\n      <LoadingContext.Provider value={{isLoading, setIsLoading}} className='content'>\r\n          <Dashboard auth = {role} username ={name} getToken={async ()=> await getToken()}/>\r\n          <LoadingScreen></LoadingScreen>\r\n      </LoadingContext.Provider>\r\n       \r\n      <Footer />\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\n\r\n\r\nexport default withCookies(Home);\r\n  \r\n/*\r\nHome.getInitialProps = async (ctx)=>{\r\n  const resp  =await verifySession(ctx);\r\n  return resp\r\n}*/\r\n","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\components\\signup\\signup-form.js",[],["164","165"],"C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\aws-exports.js",[],"C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\components\\session-verifier.js",[],["166","167"],"C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\components\\footer.js",[],"C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\index.js",["168"],"C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\components\\sideMenu\\index.js",[],"C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\components\\loadingScreen\\index.js",[],"C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\users\\index.js",["169","170","171"],"import {useState, useEffect, useContext } from 'react';\r\nimport axios from 'axios'\r\nimport {Auth}  from 'aws-amplify';\r\nimport Card from '../../../components/card';\r\nimport {Link} from 'react-router-dom'\r\nimport {withRouter} from 'react-router-dom'\r\nimport { deleteUser, listUsers, joinUser } from '../../../utils/users';\r\nimport moment from 'moment';\r\nimport './style.css';\r\nimport LoadingContext from '../../context';\r\n\r\n\r\nfunction Users(props){\r\nconst [users, setUsers] = useState([])\r\nconst [update, setUpdate] = useState(true)\r\nconst [session, setSession] = useState({authToken:'', userId:''})\r\nconst {isLoading, setIsLoading} = useContext(LoadingContext)\r\n\r\nconst updateFunc = async()=>{\r\n    await getToken()\r\n    const response = await listUsers(session)\r\n    if(response.status===200){\r\n        const mts = response.data.map(element => {\r\n            console.log(element)\r\n            const {id, email, start, firstName:fname} = element\r\n            return {\r\n                userId: id,\r\n                fname,\r\n                email,\r\n                start,\r\n            }\r\n        });\r\n        if(users!==mts){\r\n            setUsers(mts)\r\n        }\r\n        \r\n    }\r\n    \r\n}\r\n\r\n\r\nasync function getToken(){\r\n    let sessionInfo = await Auth.currentSession()\r\n        if(session.authToken !== sessionInfo.idToken.jwtToken){\r\n        console.log('Update token')\r\n        session.authToken = sessionInfo.idToken.jwtToken\r\n        setSession(session)\r\n        }\r\n        return session\r\n    }\r\n\r\nuseEffect(()=>{\r\n    if(update){\r\n        setIsLoading(true);\r\n        updateFunc();\r\n        setUpdate(false);\r\n        setIsLoading(false)\r\n    }\r\n})\r\n\r\nreturn(\r\n    <div className=\"my-calls scroll section\">\r\n    <div className=\"subheader\">\r\n        <h2 >Available Calls</h2>\r\n        <Link className='create-button' to='/users/create-user'>New user</Link>\r\n    </div>\r\n    <div className=\"my-calls-content\">\r\n        <div className = \"calls-list\">\r\n            {\r\n                users.map((user, i) =>{\r\n                    let userId = user.userId\r\n                    let startTime = moment(user.start)\r\n                    console.log(user)\r\n                    return (\r\n                        <Card name = {user.fname} cardId = {userId} type='user' updatePath='/users/update-user' fields={[\r\n                            {label: 'email', value: user.email},\r\n                            {label: 'Start', value: startTime.format(\"DD/MM/YYYY\")},\r\n                        ]\r\n                        } key ={i} deleteFunc={async()=>{await deleteUser(session, {userId}); updateFunc()}} joinFunc={async ()=>{await joinUser(session, {userId}); updateFunc()}}></Card>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n         \r\n    </div>         \r\n    </div>\r\n)\r\n}\r\n\r\nexport default withRouter(Users)\r\n\r\n  ","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\components\\createForm\\index.js",["172"],"import React from 'react'\r\nimport axios from 'axios'\r\nimport {withCookies} from 'react-cookie'\r\n// import moment from 'moment'\r\nimport './style.css'\r\n\r\n\r\n\r\nclass CreateForm extends React.Component{\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {fields: props.campos}\r\n      this.state['created'] = false\r\n      this.state['invalidData'] = false\r\n    }\r\n\r\n    loading = (isLoading)=>{\r\n      if(this.props.loading){\r\n          this.props.loading(isLoading);\r\n        }\r\n    }\r\n    \r\n    submitForm = async (event)=>{\r\n      event.preventDefault();\r\n      const { cookies } = this.props;\r\n      this.loading(true)\r\n      var data={}\r\n      Object.keys(this.state.fields).map((k)=>{data[k]=this.state.fields[k].value})\r\n      await axios({\r\n        url:process.env.REACT_APP_BACKEND_URI+'/api/adm'+this.props.path,\r\n        method: 'post',\r\n        data,\r\n        headers: {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        authToken: cookies.cookies.authToken\r\n      }\r\n      }).then((response) => {\r\n        // console.log(response)\r\n        \r\n        if(response.status===201){\r\n          this.setState({created:true, invalidData:false})\r\n         }else{\r\n        this.setState({created:false, invalidData:true})}\r\n      }).catch((error) => {\r\n        alert(\"Acesso não autorizado, apenas administradores podem criar chamadas. Por favor, faça o seu login novamente\")\r\n      this.setState({created:false, invalidData:false})\r\n    })  \r\n    this.loading(false)\r\n    }\r\n\r\n    componentDidMount = async ()=>{\r\n      // await this.listThemes()\r\n    }\r\n\r\n    invalidMessage = ()=>{\r\n      if(this.state.invalidData){\r\n        return<p>date ou senha não encontrados</p>\r\n      }\r\n    }\r\n\r\n    createdMessage = ()=>{\r\n      if(this.state.created){\r\n        return<p>A sua Call foi criada</p>\r\n      }\r\n    }\r\n\r\n    field = (name)=>{\r\n        var field = this.state.fields[name]\r\n        console.log(field)\r\n        if(field.type === 'input'){\r\n            // console.log('input')\r\n            return(\r\n                <label>\r\n                    <span>{field.label}</span>\r\n                    <input type = 'text' name = {name} value = {field.value} onChange ={(e)=>{field.value =e.target.value; this.setState({[name]:field})}}></input>\r\n                </label>\r\n            )\r\n        }else if(field.type === 'select'){\r\n          // console.log(field.values)\r\n            return(\r\n                \r\n                <label>\r\n                    <span>{field.label}</span>\r\n                    {/* <input type = {field.inputType} name = {name}  onChange ={(e)=>{field.value =e.target.value; this.setState({name:field})}}></input> */}\r\n                    <select value = {field.value} onChange ={(e)=>{field.value =e.target.value; this.setState({name:field})}}>\r\n                        <option value=''>- - Unknown - -</option>\r\n                        {field.values.map((val,index)=>{\r\n                            return <option value={val._id}>{val.title}</option>\r\n                        })}\r\n                    </select>\r\n                </label>\r\n            )\r\n        } else if(field.type === 'date'){\r\n          // console.log('input')\r\n          return(\r\n              <label>\r\n                  <span>{field.label}</span>\r\n                  <input type = 'datetime-local' name = \"date\" value = {this.state.date} onChange ={(e)=>{field.value =e.target.value; this.setState({name:field})}}></input>\r\n              </label>\r\n          )\r\n      } \r\n    }\r\n\r\n    render(){\r\n      let f = []\r\n      // console.log(this.props.campos)\r\n      if (this.props.campos){\r\n        let fi = this.props.campos\r\n        \r\n        f =Object.keys(fi).map((k)=>{return this.field(k)})\r\n      }\r\n      // console.log(f)\r\n      return(<div className=\"create\">\r\n          <form className =\"create-form\" >\r\n            {f}\r\n            <div>\r\n            <button type=\"submit\" onClick={this.submitForm}>Enviar</button>\r\n            </div>\r\n            {this.invalidMessage()}\r\n            {this.createdMessage()}\r\n          </form>\r\n        </div>);\r\n    }\r\n  }\r\n\r\n\r\n\r\n  export default withCookies(CreateForm);","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\calls\\calls-list\\index.js",[],"C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\calls\\createCall\\index.js",[],"C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\calls\\my-calls\\index.js",["173"],"import React from 'react'\r\nimport {withCookies} from 'react-cookie'\r\nimport Card from '../../../../components/card'\r\nimport './styles.css'\r\nimport moment from 'moment';\r\nimport axios from 'axios';\r\n\r\n  \r\nclass MyCalls extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            callsList:[],\r\n        }\r\n    }\r\n    loading = (isLoading)=>{\r\n        if(this.props.loading){\r\n            this.props.loading(isLoading);\r\n        }\r\n    }\r\n    \r\n    listUserCalls = async ()=>{\r\n        this.loading(true)\r\n        const {cookies} = this.props.cookies\r\n        const resp = await axios({\r\n            url:process.env.REACT_APP_BACKEND_URI+'/api/calls/mycalls',\r\n            method: 'get',\r\n            headers: {\"Access-Control-Allow-Origin\": \"*\", \"authToken\":cookies.authToken}\r\n            }).then((response) => {\r\n            //console.log(response);\r\n            \r\n            return {data: response.data, status: response.status}\r\n        \r\n        }).catch(error =>{\r\n            return {msg:error, status:401}\r\n        })\r\n        //console.log(resp)\r\n    \r\n        if(resp.data){\r\n            this.setState({callsList:resp.data})\r\n        }\r\n        this.loading(false)\r\n\r\n    }\r\n\r\n    componentDidMount= async() =>{\r\n        await this.listUserCalls()\r\n    }\r\n    participate = (link)=>{\r\n        if (link!=''){\r\n            return<a href={link}  target=\"_blank\" rel=\"noopener noreferrer\">Entrar na sala</a>\r\n    }}\r\n    myCallsRender = (calls)=>{\r\n        var callsComp = []\r\n        if(calls.client){\r\n            calls.client.forEach((call,i)=>{\r\n                var moderator = []\r\n                const date = moment(call.date)\r\n                var title = '';\r\n                if(call.theme){\r\n                    if(call.theme[0]){\r\n                        title = call.theme[0].title\r\n                    }\r\n                }\r\n                var link = ''\r\n                if(call.link){\r\n                    link = call.link\r\n                }\r\n\r\n                callsComp.push(\r\n\r\n                    <Card key={i}>\r\n                        <div className = \"card-content\">\r\n                        <div className = \"card-description\">\r\n                            <p className = \"call-theme\">{title}</p>\r\n                            {moderator}\r\n                            <p className = \"call-occupation\"><b>Ocupação:</b><span className=\"card-content-text\">{call.clients.length}</span></p>\r\n                            <p className = \"call-date\"><b>Data:</b><span className=\"card-content-text\">{date.format('DD/MM/YYYY')} às {date.format('HH:mm')}h</span></p>\r\n                            {this.participate(link)}\r\n                        </div>\r\n                        </div>\r\n                    </Card>\r\n                )\r\n            })\r\n        }\r\n\r\n        if(calls.moderator){\r\n            calls.moderator.forEach((call,i)=>{\r\n                const date = moment(call.date)\r\n                var title = '';\r\n                if(call.theme){\r\n                    if(call.theme[0]){\r\n                        title = call.theme[0].title\r\n                    }\r\n                }\r\n                var link = ''\r\n                if(call.link){\r\n                    link = call.link\r\n                }\r\n                callsComp.push(\r\n                    <Card key={\"M\"+i} moderator={true} >\r\n                        <div className = \"card-content\">\r\n                        <div className = \"card-description\">\r\n                            <p className = \"call-theme\">{title}</p>\r\n                            <p className = \"call-occupation\"><b>Ocupação:</b><span className=\"card-content-text\">{call.clients.length}</span></p>\r\n                            <p className = \"call-date\"><b>Data:</b><span className=\"card-content-text\">{date.format('DD/MM/YYYY')} às {date.format('HH:mm')}h</span></p>\r\n                            {this.participate(link)}\r\n                         </div>\r\n                       </div> \r\n                    </Card>\r\n                )\r\n            })\r\n        }\r\n        return callsComp\r\n    }\r\n    \r\n    render(){\r\n        // console.log(this.props.calls)\r\n        return(\r\n        <div className=\"my-calls scroll\">\r\n            <div className=\"my-calls-content\">\r\n               <h2 >Minhas Calls</h2>\r\n                <div className = \"calls-list\">\r\n                    {this.myCallsRender(this.state.callsList)}\r\n                </div> \r\n            </div>\r\n            {this.props.loadingscreen}\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withCookies(MyCalls);\r\n",["174","175"],"C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\themes\\list-themes\\index.js",["176"],"import React from 'react'\r\nimport axios from 'axios'\r\nimport ThemeCard from './theme-card'\r\nimport {withCookies} from 'react-cookie'\r\nimport './styles.css'\r\nimport { withAuthenticator, AmplifySignOut } from '@aws-amplify/ui-react';\r\n\r\nimport {Switch, Route} from 'react-router-dom'\r\n// import EditCall from '../edit-call'\r\n\r\n  \r\nclass ListThemes extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            themesList:[],\r\n        }\r\n    }\r\n\r\n    loading = (isLoading)=>{\r\n        if(this.props.loading){\r\n            this.props.loading(isLoading);\r\n        }\r\n    }\r\n\r\n    listThemes = async ()=>{\r\n        const {cookies} = this.props.cookies\r\n        this.loading(true)\r\n        const resp = await axios({\r\n          url:process.env.REACT_APP_BACKEND_URI+'/api/adm/themes',\r\n          method: 'get',\r\n          headers: {\"Access-Control-Allow-Origin\": \"*\", \"authToken\":cookies.authToken}\r\n          }).then((response) => {\r\n            //   console.log(response)\r\n            return {data: response.data, status: response.status}\r\n      \r\n        }).catch(error =>{\r\n          return {msg:error, status:401}\r\n        })\r\n        console.log(resp)\r\n        if(resp.data){\r\n            this.setState({themesList:resp.data})\r\n        }\r\n        this.loading(false)\r\n      }\r\n\r\n    componentDidMount = async ()=>{\r\n        await this.listThemes()\r\n    }\r\n\r\n    availableThemesRender = (themes)=>{\r\n        var themesComp = []\r\n        if(themes){\r\n            themes.forEach((theme,i)=>{\r\n                themesComp.push(\r\n                    <ThemeCard data={theme} keys={i.toString()} key={i.toString()} auth={this.props.auth} choose={this.refresh} loading={this.loading}/>\r\n                )\r\n            })\r\n        }\r\n        \r\n        return themesComp;\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n        <div className =\"available-calls scroll\">\r\n            <Switch>\r\n                {/* <Route path='/available-calls/:id'>\r\n                    <EditCall update={this.listCalls} loading={this.loading}></EditCall>\r\n                </Route> */}\r\n                <Route path='/list-themes'>\r\n                    <div className=\"calls-list-container\">\r\n                        <h2>Temas disponíveis</h2>\r\n                        <div className = \"calls-list\">\r\n                            {this.availableThemesRender(this.state.themesList)}\r\n                        </div>\r\n                    </div>\r\n                </Route>\r\n            </Switch>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withAuthenticator(withCookies(ListThemes));\r\n","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\calls\\calls-list\\call-card.js",[],"C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\themes\\list-themes\\theme-card.js",[],"C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\calls\\edit-call\\index.js",[],"C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\components\\card\\index.js",["177","178"],"C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\meetings\\index.js",["179","180","181"],"import {useState, useEffect, useContext } from 'react';\r\nimport axios from 'axios'\r\nimport {Auth}  from 'aws-amplify';\r\nimport Card from '../../../components/card';\r\nimport {Link} from 'react-router-dom'\r\nimport {withRouter} from 'react-router-dom'\r\nimport { deleteMeeting, listMeetings, joinMeeting } from '../../../utils/meetings';\r\nimport moment from 'moment';\r\nimport './style.css';\r\nimport LoadingContext from '../../context';\r\n\r\n\r\nfunction Meetings(props){\r\nconst [meetings, setMeetings] = useState([])\r\nconst [update, setUpdate] = useState(true)\r\nconst [session, setSession] = useState({authToken:'', userId:''})\r\nconst {isLoading, setIsLoading} = useContext(LoadingContext)\r\n\r\nconst updateFunc = async()=>{\r\n    await getToken()\r\n    const response = await listMeetings(session)\r\n    if(response.status===200){\r\n        const mts = response.data.map(element => {\r\n            const {id, subscribed_users, start, tag} = element\r\n            return {\r\n                meetingId: id,\r\n                users: subscribed_users,\r\n                start,\r\n                tag\r\n            }\r\n        });\r\n        if(meetings!==mts){\r\n            setMeetings(mts)\r\n        }\r\n        \r\n    }\r\n    \r\n}\r\n\r\n\r\nasync function getToken(){\r\n    let sessionInfo = await Auth.currentSession()\r\n        if(session.authToken !== sessionInfo.idToken.jwtToken){\r\n        console.log('Update token')\r\n        session.authToken = sessionInfo.idToken.jwtToken\r\n        setSession(session)\r\n        }\r\n        return session\r\n    }\r\n\r\nuseEffect(()=>{\r\n    if(update){\r\n        setIsLoading(true);\r\n        updateFunc();\r\n        setUpdate(false);\r\n        setIsLoading(false)\r\n    }\r\n})\r\n\r\nreturn(\r\n    <div className=\"my-calls scroll section\">\r\n    <div className=\"subheader\">\r\n        <h2 >Available Calls</h2>\r\n        <Link className='create-button' to='/meetings/create-meeting'>New meeting</Link>\r\n    </div>\r\n    <div className=\"my-calls-content\">\r\n        <div className = \"calls-list\">\r\n            {\r\n                meetings.map((meeting, i) =>{\r\n                    let meetingId = meeting.meetingId\r\n                    let startTime = moment(meeting.start)\r\n                    console.log(meeting)\r\n                    return (\r\n                        <Card tag = {meeting.tag} cardId = {meetingId} updatePath='/meetings/update-meeting' fields={[\r\n                            {label: 'Incriptions', value: meeting.users? meeting.users.length:0},\r\n                            {label: 'Date', value: startTime.format(\"DD/MM/YYYY\")},\r\n                            {label: 'Start', value: startTime.format(\"h:mm\")},\r\n                        ]\r\n                        } key ={i} deleteFunc={async()=>{await deleteMeeting(session, {meetingId}); updateFunc()}} joinFunc={async ()=>{await joinMeeting(session, {meetingId}); updateFunc()}}></Card>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n         \r\n    </div>         \r\n    </div>\r\n)\r\n}\r\n\r\nexport default withRouter(Meetings)\r\n\r\n  ","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\meetings\\create-meetings.js",["182"],"import { useContext, useEffect, useState } from 'react'\r\nimport {postMeeting} from  '../../../utils/meetings'\r\nimport moment from 'moment'\r\nimport { listTags } from '../../../utils/tags'\r\nimport LoadingContext from '../../context'\r\n\r\nfunction CreateMeetingForm(props){\r\n    const [tag, setTag] = useState('presentation')\r\n    const [start, setStart] = useState(moment().format('YYYY-MM-DDTh:mm:ss'))\r\n    const [tagsList, setTagsList] = useState([])\r\n    const {setIsLoading} = useContext(LoadingContext)\r\n    useEffect(()=>{\r\n        setIsLoading(true)\r\n        listTags(props.session).then((response)=>{\r\n            setTagsList(response.data)\r\n        }).catch((error)=>{\r\n            console.log(error)\r\n        })\r\n        setIsLoading(false)\r\n    },[])\r\n    const opionsList = ()=>{\r\n        return tagsList.map((tag)=>{\r\n            console.log(tag);\r\n            return <option value={tag.id}>{tag.tag_name}</option>\r\n        })\r\n    }\r\n    return(\r\n        <div className=\"create\">\r\n            <h1>Create a new call</h1>\r\n            <form className =\"create-form\" >\r\n                <label>\r\n                    <span>Tag:</span>\r\n                    <select name=\"tag\" id=\"tags\" onChange={(e)=>{setTag(e.target.value)}} value={tag}>\r\n                        {opionsList()}\r\n                    </select>\r\n                </label>\r\n                <label>\r\n                    <span>Start</span>\r\n                    <input type='datetime-local' value={start} onChange={(e)=>{setStart(e.target.value)}}></input>\r\n                </label>\r\n                <button type=\"submit\" onClick={(e)=>{e.preventDefault();postMeeting(props.session, {tag, start})}}>Enviar</button>\r\n            </form>\r\n        </div>);\r\n}\r\n\r\n\r\n\r\nexport default CreateMeetingForm;\r\n\r\n  \r\n\r\n","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\meetings\\update-meetings.js",["183"],"import { useEffect, useState } from 'react'\r\nimport {getMeeting, updateMeeting} from  '../../../utils/meetings'\r\nimport {useLocation} from \"react-router-dom\";\r\nimport moment from 'moment'\r\n\r\nfunction UpdateMeetingForm(props){\r\n    const [tag, setTag] = useState('presentation')\r\n    const [start, setStart] = useState(moment().format('YYYY-MM-DDTh:mm:ss'))\r\n    const meetingId = useQuery().get('id')\r\n\r\n    useEffect(()=>{\r\n        getMeeting(props.session, {meetingId}).then((response)=>{\r\n            console.log(response.data)\r\n            setTag(response.data.tag);\r\n            setStart(response.data.start);\r\n        }).catch((error)=>{\r\n            console.log(error)\r\n        });\r\n        \r\n    }, [])\r\n    // console.log(tag)\r\n    // console.log(start)\r\n    // console.log(id)\r\n\r\n    return(\r\n        <div className=\"create\">\r\n            <h1>Update a new call</h1>\r\n            <form className =\"create-form\" >\r\n                <label>\r\n                    <span>Tag:</span>\r\n                    <select name=\"tag\" id=\"tags\" onChange={(e)=>{setTag(e.target.value)}} value={tag}>\r\n                        <option value=\"test\">test</option>\r\n                        <option value=\"sport\">sport</option>\r\n                        <option value=\"presentation\">presentation</option>\r\n                    </select>\r\n                </label>\r\n                <label>\r\n                    <span>Start</span>\r\n                    <input type='datetime-local' value={start} onChange={(e)=>{setStart(e.target.value)}}></input>\r\n                </label>\r\n                <button type=\"submit\" onClick={(e)=>{e.preventDefault();updateMeeting(props.session, {meetingId, tag, start})}}>Enviar</button>\r\n            </form>\r\n        </div>);\r\n}\r\n\r\n\r\n\r\nexport default UpdateMeetingForm;\r\n\r\nfunction useQuery() {\r\n  return new URLSearchParams(useLocation().search);\r\n}  \r\n\r\n","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\utils\\meetings.js",[],"C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\utils\\tags.js",[],"C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\pages\\context.js",[],"C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\users\\create-users.js",["184"],"import { useContext, useEffect, useState } from 'react'\r\nimport {postUser} from  '../../../utils/users'\r\nimport moment from 'moment'\r\nimport { listTags } from '../../../utils/tags'\r\nimport LoadingContext from '../../context'\r\n\r\nfunction CreateUserForm(props){\r\n    const [tag, setTag] = useState('presentation')\r\n    const [start, setStart] = useState(moment().format('YYYY-MM-DDTh:mm:ss'))\r\n    const [tagsList, setTagsList] = useState([])\r\n    const {setIsLoading} = useContext(LoadingContext)\r\n    useEffect(()=>{\r\n        setIsLoading(true)\r\n        listTags(props.session).then((response)=>{\r\n            setTagsList(response.data)\r\n        }).catch((error)=>{\r\n            console.log(error)\r\n        })\r\n        setIsLoading(false)\r\n    },[])\r\n    const opionsList = ()=>{\r\n        return tagsList.map((tag)=>{\r\n            console.log(tag);\r\n            return <option value={tag.id}>{tag.tag_name}</option>\r\n        })\r\n    }\r\n    return(\r\n        <div className=\"create\">\r\n            <h1>Create a new call</h1>\r\n            <form className =\"create-form\" >\r\n                <label>\r\n                    <span>Tag:</span>\r\n                    <select name=\"tag\" id=\"tags\" onChange={(e)=>{setTag(e.target.value)}} value={tag}>\r\n                        {opionsList()}\r\n                    </select>\r\n                </label>\r\n                <label>\r\n                    <span>Start</span>\r\n                    <input type='datetime-local' value={start} onChange={(e)=>{setStart(e.target.value)}}></input>\r\n                </label>\r\n                <button type=\"submit\" onClick={(e)=>{e.preventDefault();postUser(props.session, {tag, start})}}>Enviar</button>\r\n            </form>\r\n        </div>);\r\n}\r\n\r\n\r\n\r\nexport default CreateUserForm;\r\n\r\n  \r\n\r\n","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\users\\update-users.js",["185","186","187"],"import { useEffect, useState } from 'react'\r\nimport {getUser, updateUser} from  '../../../utils/users'\r\nimport {useLocation} from \"react-router-dom\";\r\nimport moment from 'moment'\r\n\r\nfunction UpdateUserForm(props){\r\n    const [fname, setFname] = useState('')\r\n    const [lname, setLname] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [start, setStart] = useState(moment().format('YYYY-MM-DDTh:mm:ss'))\r\n    const userId = useQuery().get('id')\r\n\r\n    useEffect(()=>{\r\n        getUser(props.session, {userId}).then((response)=>{\r\n            console.log(response.data)\r\n            if(response.data.first_name){\r\n                setFname(response.data.first_name)\r\n            }\r\n            if(response.data.last_name){\r\n                setLname(response.data.last_name)\r\n            }\r\n            if(response.data.email){\r\n                setEmail(response.data.email)\r\n            }\r\n            setStart(response.data.start);\r\n        }).catch((error)=>{\r\n            console.log(error)\r\n        });\r\n        \r\n    }, [])\r\n    // console.log(tag)\r\n    // console.log(start)\r\n    // console.log(id)\r\n\r\n    return(\r\n        <div className=\"create\">\r\n            <h1>Update a user</h1>\r\n            <form className =\"create-form\" >\r\n                <label>\r\n                    <span>First Name</span>\r\n                    <input type='text' value={fname} onChange={(e)=>{setFname(e.target.value)}}></input>\r\n                </label>\r\n                <label>\r\n                    <span>Last Name</span>\r\n                    <input type='text' value={lname} onChange={(e)=>{setLname(e.target.value)}}></input>\r\n                </label>\r\n                <label>\r\n                    <span>Email</span>\r\n                    {/* <input type='text' value={email} onChange={(e)=>{setEmail(e.target.value)}}></input> */}\r\n                </label>\r\n                <label>\r\n                    <span>Start</span>\r\n                    {/* <input type='datetime-local' value={start} onChange={(e)=>{setStart(e.target.value)}}></input> */}\r\n                </label>\r\n                <button type=\"submit\" onClick={(e)=>{e.preventDefault();updateUser(props.session, {userId, first_name:fname, last_name:lname})}}>Enviar</button>\r\n            </form>\r\n        </div>);\r\n}\r\n\r\n\r\n\r\nexport default UpdateUserForm;\r\n\r\nfunction useQuery() {\r\n  return new URLSearchParams(useLocation().search);\r\n}  \r\n\r\n","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\utils\\users.js",[],"C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\topics\\update-topic.js",["188","189","190","191"],"import { useEffect, useState } from 'react'\r\nimport {getTopic, updateTopic} from  '../../../utils/topics'\r\nimport {useLocation} from \"react-router-dom\";\r\nimport moment from 'moment'\r\n\r\nfunction UpdateTopicForm(props){\r\n    const [name, setName] = useState('')\r\n    const [description, setDescription] = useState('')\r\n    const [tag, setTag] = useState('')\r\n    const [start, setStart] = useState(moment().format('YYYY-MM-DDTh:mm:ss'))\r\n    const topicId = useQuery().get('id')\r\n\r\n    useEffect(()=>{\r\n        getTopic(props.session, {topicId}).then((response)=>{\r\n            console.log(response.data)\r\n            if(response.data.topic_name){\r\n                setName(response.data.topic_name)\r\n            }\r\n            if(response.data.topic_description){\r\n                setDescription(response.data.topic_description)\r\n            }\r\n            if(response.data.tag_id){\r\n                setTag(response.data.tag_id)\r\n            }\r\n        }).catch((error)=>{\r\n            console.log(error)\r\n        });\r\n        \r\n    }, [])\r\n    // console.log(tag)\r\n    // console.log(start)\r\n    // console.log(id)\r\n\r\n    return(\r\n        <div className=\"create\">\r\n            <h1>Update a topic</h1>\r\n            <form className =\"create-form\" >\r\n                <label>\r\n                    <span>Name</span>\r\n                    <input type='text' value={name} onChange={(e)=>{setName(e.target.value)}}></input>\r\n                </label>\r\n                <label>\r\n                    <span>Description</span>\r\n                    <input type='text' value={description} onChange={(e)=>{setDescription(e.target.value)}}></input>\r\n                </label>\r\n                {/* <label>\r\n                    <span>Email</span> */}\r\n                    {/* <input type='text' value={tag} onChange={(e)=>{setTag(e.target.value)}}></input> */}\r\n                {/* </label>\r\n                <label>\r\n                    <span>Start</span> */}\r\n                    {/* <input type='datetime-local' value={start} onChange={(e)=>{setStart(e.target.value)}}></input> */}\r\n                {/* </label> */}\r\n                <button type=\"submit\" onClick={(e)=>{e.preventDefault();updateTopic(props.session, {topicId, topicName:name, topicDescription:description})}}>Enviar</button>\r\n            </form>\r\n        </div>);\r\n}\r\n\r\n\r\n\r\nexport default UpdateTopicForm;\r\n\r\nfunction useQuery() {\r\n  return new URLSearchParams(useLocation().search);\r\n}  \r\n\r\n","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\topics\\create-topic.js",["192"],"import { useContext, useEffect, useState } from 'react'\r\nimport {postTopic} from  '../../../utils/topics'\r\nimport moment from 'moment'\r\nimport { listTags } from '../../../utils/tags'\r\nimport LoadingContext from '../../context'\r\n\r\nfunction CreateTopicForm(props){\r\n    const [tag, setTag] = useState('presentation')\r\n    const [start, setStart] = useState(moment().format('YYYY-MM-DDTh:mm:ss'))\r\n    const [tagsList, setTagsList] = useState([])\r\n    const {setIsLoading} = useContext(LoadingContext)\r\n    useEffect(()=>{\r\n        setIsLoading(true)\r\n        listTags(props.session).then((response)=>{\r\n            setTagsList(response.data)\r\n        }).catch((error)=>{\r\n            console.log(error)\r\n        })\r\n        setIsLoading(false)\r\n    },[])\r\n    const opionsList = ()=>{\r\n        return tagsList.map((tag)=>{\r\n            console.log(tag);\r\n            return <option value={tag.id}>{tag.tag_name}</option>\r\n        })\r\n    }\r\n    return(\r\n        <div className=\"create\">\r\n            <h1>Create a new call</h1>\r\n            <form className =\"create-form\" >\r\n                <label>\r\n                    <span>Tag:</span>\r\n                    <select name=\"tag\" id=\"tags\" onChange={(e)=>{setTag(e.target.value)}} value={tag}>\r\n                        {opionsList()}\r\n                    </select>\r\n                </label>\r\n                <label>\r\n                    <span>Start</span>\r\n                    <input type='datetime-local' value={start} onChange={(e)=>{setStart(e.target.value)}}></input>\r\n                </label>\r\n                <button type=\"submit\" onClick={(e)=>{e.preventDefault();postTopic(props.session, {tag, start})}}>Enviar</button>\r\n            </form>\r\n        </div>);\r\n}\r\n\r\n\r\n\r\nexport default CreateTopicForm;\r\n\r\n  \r\n\r\n","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\topics\\index.js",["193","194","195","196"],"import {useState, useEffect, useContext } from 'react';\r\nimport axios from 'axios'\r\nimport {Auth}  from 'aws-amplify';\r\nimport Card from '../../../components/card';\r\nimport {Link} from 'react-router-dom'\r\nimport {withRouter} from 'react-router-dom'\r\nimport { deleteTopic, listTopics, joinTopic } from '../../../utils/topics';\r\nimport moment from 'moment';\r\nimport './style.css';\r\nimport LoadingContext from '../../context';\r\n\r\n\r\nfunction Topics(props){\r\nconst [topics, setTopics] = useState([])\r\nconst [update, setUpdate] = useState(true)\r\nconst [session, setSession] = useState({authToken:'', topicId:''})\r\nconst {isLoading, setIsLoading} = useContext(LoadingContext)\r\n\r\nconst updateFunc = async()=>{\r\n    await getToken()\r\n    const response = await listTopics(session)\r\n    if(response.status===200){\r\n        const mts = response.data.map(element => {\r\n            console.log(element)\r\n            const {id, topic_description:description, topic_name:name} = element\r\n            return {\r\n                topicId: id,\r\n                description,\r\n                name\r\n            }\r\n        });\r\n        if(topics!==mts){\r\n            setTopics(mts)\r\n        }\r\n        \r\n    }\r\n    \r\n}\r\n\r\n\r\nasync function getToken(){\r\n    let sessionInfo = await Auth.currentSession()\r\n        if(session.authToken !== sessionInfo.idToken.jwtToken){\r\n        console.log('Update token')\r\n        session.authToken = sessionInfo.idToken.jwtToken\r\n        setSession(session)\r\n        }\r\n        return session\r\n    }\r\n\r\nuseEffect(()=>{\r\n    if(update){\r\n        setIsLoading(true);\r\n        updateFunc();\r\n        setUpdate(false);\r\n        setIsLoading(false)\r\n    }\r\n})\r\n\r\nreturn(\r\n    <div className=\"my-calls scroll section\">\r\n    <div className=\"subheader\">\r\n        <h2 >Available Topics</h2>\r\n        <Link className='create-button' to='/topics/create-topic'>New topic</Link>\r\n    </div>\r\n    <div className=\"my-calls-content\">\r\n        <div className = \"calls-list\">\r\n            {\r\n                topics.map((topic, i) =>{\r\n                    let topicId = topic.topicId\r\n                    let startTime = moment(topic.start)\r\n                    console.log(topic)\r\n                    return (\r\n                        <Card name = {topic.fname} cardId = {topicId} type='topic' updatePath='/topics/update-topic' fields={[\r\n                            {label: 'Name', value: topic.name},\r\n                            {label: 'Description', value: topic.description},\r\n                        ]\r\n                        } key ={i} deleteFunc={async()=>{await deleteTopic(session, {topicId}); updateFunc()}} joinFunc={async ()=>{await joinTopic(session, {topicId}); updateFunc()}}></Card>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n         \r\n    </div>         \r\n    </div>\r\n)\r\n}\r\n\r\nexport default withRouter(Topics)\r\n\r\n  ","C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\utils\\topics.js",[],"C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\tags\\create-tag.js",["197"],"C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\tags\\update-tag.js",["198","199"],"C:\\Users\\guien\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\tags\\index.js",["200","201","202","203"],{"ruleId":"204","replacedBy":"205"},{"ruleId":"206","replacedBy":"207"},{"ruleId":"208","severity":1,"message":"209","line":15,"column":16,"nodeType":"210","messageId":"211","endLine":15,"endColumn":23},{"ruleId":"208","severity":1,"message":"212","line":16,"column":16,"nodeType":"210","messageId":"211","endLine":16,"endColumn":23},{"ruleId":"213","severity":1,"message":"214","line":21,"column":6,"nodeType":"215","endLine":21,"endColumn":15,"suggestions":"216"},{"ruleId":"204","replacedBy":"217"},{"ruleId":"206","replacedBy":"218"},{"ruleId":"204","replacedBy":"219"},{"ruleId":"206","replacedBy":"220"},{"ruleId":"213","severity":1,"message":"214","line":42,"column":7,"nodeType":"215","endLine":42,"endColumn":16,"suggestions":"221"},{"ruleId":"208","severity":1,"message":"222","line":2,"column":8,"nodeType":"210","messageId":"211","endLine":2,"endColumn":13},{"ruleId":"208","severity":1,"message":"223","line":17,"column":8,"nodeType":"210","messageId":"211","endLine":17,"endColumn":17},{"ruleId":"213","severity":1,"message":"224","line":52,"column":1,"nodeType":"210","endLine":52,"endColumn":10,"suggestions":"225"},{"ruleId":"226","severity":1,"message":"227","line":28,"column":45,"nodeType":"228","messageId":"229","endLine":28,"endColumn":47},{"ruleId":"230","severity":1,"message":"231","line":50,"column":17,"nodeType":"232","messageId":"233","endLine":50,"endColumn":19},{"ruleId":"204","replacedBy":"234"},{"ruleId":"206","replacedBy":"235"},{"ruleId":"208","severity":1,"message":"236","line":6,"column":29,"nodeType":"210","messageId":"211","endLine":6,"endColumn":43},{"ruleId":"208","severity":1,"message":"237","line":2,"column":10,"nodeType":"210","messageId":"211","endLine":2,"endColumn":23},{"ruleId":"238","severity":1,"message":"239","line":51,"column":11,"nodeType":"240","messageId":"241","endLine":51,"endColumn":17},{"ruleId":"208","severity":1,"message":"222","line":2,"column":8,"nodeType":"210","messageId":"211","endLine":2,"endColumn":13},{"ruleId":"208","severity":1,"message":"223","line":17,"column":8,"nodeType":"210","messageId":"211","endLine":17,"endColumn":17},{"ruleId":"213","severity":1,"message":"224","line":51,"column":1,"nodeType":"210","endLine":51,"endColumn":10,"suggestions":"242"},{"ruleId":"213","severity":1,"message":"243","line":20,"column":7,"nodeType":"215","endLine":20,"endColumn":9,"suggestions":"244"},{"ruleId":"213","severity":1,"message":"245","line":20,"column":8,"nodeType":"215","endLine":20,"endColumn":10,"suggestions":"246"},{"ruleId":"213","severity":1,"message":"243","line":20,"column":7,"nodeType":"215","endLine":20,"endColumn":9,"suggestions":"247"},{"ruleId":"208","severity":1,"message":"248","line":9,"column":12,"nodeType":"210","messageId":"211","endLine":9,"endColumn":17},{"ruleId":"208","severity":1,"message":"249","line":10,"column":12,"nodeType":"210","messageId":"211","endLine":10,"endColumn":17},{"ruleId":"213","severity":1,"message":"250","line":30,"column":8,"nodeType":"215","endLine":30,"endColumn":10,"suggestions":"251"},{"ruleId":"208","severity":1,"message":"252","line":9,"column":12,"nodeType":"210","messageId":"211","endLine":9,"endColumn":15},{"ruleId":"208","severity":1,"message":"249","line":10,"column":12,"nodeType":"210","messageId":"211","endLine":10,"endColumn":17},{"ruleId":"208","severity":1,"message":"253","line":10,"column":19,"nodeType":"210","messageId":"211","endLine":10,"endColumn":27},{"ruleId":"213","severity":1,"message":"254","line":29,"column":8,"nodeType":"215","endLine":29,"endColumn":10,"suggestions":"255"},{"ruleId":"213","severity":1,"message":"243","line":20,"column":7,"nodeType":"215","endLine":20,"endColumn":9,"suggestions":"256"},{"ruleId":"208","severity":1,"message":"222","line":2,"column":8,"nodeType":"210","messageId":"211","endLine":2,"endColumn":13},{"ruleId":"208","severity":1,"message":"223","line":17,"column":8,"nodeType":"210","messageId":"211","endLine":17,"endColumn":17},{"ruleId":"213","severity":1,"message":"224","line":51,"column":1,"nodeType":"210","endLine":51,"endColumn":10,"suggestions":"257"},{"ruleId":"208","severity":1,"message":"258","line":71,"column":25,"nodeType":"210","messageId":"211","endLine":71,"endColumn":34},{"ruleId":"213","severity":1,"message":"243","line":20,"column":7,"nodeType":"215","endLine":20,"endColumn":9,"suggestions":"259"},{"ruleId":"208","severity":1,"message":"260","line":4,"column":8,"nodeType":"210","messageId":"211","endLine":4,"endColumn":14},{"ruleId":"213","severity":1,"message":"261","line":26,"column":8,"nodeType":"215","endLine":26,"endColumn":10,"suggestions":"262"},{"ruleId":"208","severity":1,"message":"222","line":2,"column":8,"nodeType":"210","messageId":"211","endLine":2,"endColumn":13},{"ruleId":"208","severity":1,"message":"223","line":17,"column":8,"nodeType":"210","messageId":"211","endLine":17,"endColumn":17},{"ruleId":"213","severity":1,"message":"224","line":52,"column":1,"nodeType":"210","endLine":52,"endColumn":10,"suggestions":"263"},{"ruleId":"208","severity":1,"message":"258","line":72,"column":25,"nodeType":"210","messageId":"211","endLine":72,"endColumn":34},"no-native-reassign",["264"],"no-negated-in-lhs",["265"],"no-unused-vars","'setName' is assigned a value but never used.","Identifier","unusedVar","'setRole' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getToken'. Either include it or remove the dependency array.","ArrayExpression",["266"],["264"],["265"],["264"],["265"],["267"],"'axios' is defined but never used.","'isLoading' is assigned a value but never used.","React Hook useEffect contains a call to 'setUpdate'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [update, setIsLoading, updateFunc] as a second argument to the useEffect Hook.",["268"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["264"],["265"],"'AmplifySignOut' is defined but never used.","'deleteMeeting' is defined but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode",["269"],"React Hook useEffect has missing dependencies: 'props.session' and 'setIsLoading'. Either include them or remove the dependency array.",["270"],"React Hook useEffect has missing dependencies: 'meetingId' and 'props.session'. Either include them or remove the dependency array.",["271"],["272"],"'email' is assigned a value but never used.","'start' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.session' and 'userId'. Either include them or remove the dependency array.",["273"],"'tag' is assigned a value but never used.","'setStart' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.session' and 'topicId'. Either include them or remove the dependency array.",["274"],["275"],["276"],"'startTime' is assigned a value but never used.",["277"],"'moment' is defined but never used.","React Hook useEffect has missing dependencies: 'props.session' and 'tagId'. Either include them or remove the dependency array.",["278"],["279"],"no-global-assign","no-unsafe-negation",{"desc":"280","fix":"281"},{"desc":"280","fix":"282"},{"desc":"283","fix":"284"},{"desc":"283","fix":"285"},{"desc":"286","fix":"287"},{"desc":"288","fix":"289"},{"desc":"286","fix":"290"},{"desc":"291","fix":"292"},{"desc":"293","fix":"294"},{"desc":"286","fix":"295"},{"desc":"283","fix":"296"},{"desc":"286","fix":"297"},{"desc":"298","fix":"299"},{"desc":"283","fix":"300"},"Update the dependencies array to be: [getToken, session]",{"range":"301","text":"302"},{"range":"303","text":"302"},"Add dependencies array: [update, setIsLoading, updateFunc]",{"range":"304","text":"305"},{"range":"306","text":"305"},"Update the dependencies array to be: [props.session, setIsLoading]",{"range":"307","text":"308"},"Update the dependencies array to be: [meetingId, props.session]",{"range":"309","text":"310"},{"range":"311","text":"308"},"Update the dependencies array to be: [props.session, userId]",{"range":"312","text":"313"},"Update the dependencies array to be: [props.session, topicId]",{"range":"314","text":"315"},{"range":"316","text":"308"},{"range":"317","text":"305"},{"range":"318","text":"308"},"Update the dependencies array to be: [props.session, tagId]",{"range":"319","text":"320"},{"range":"321","text":"305"},[734,743],"[getToken, session]",[1640,1649],[1654,1654],", [update, setIsLoading, updateFunc]",[1667,1667],[755,757],"[props.session, setIsLoading]",[707,709],"[meetingId, props.session]",[746,748],[1044,1046],"[props.session, userId]",[1034,1036],"[props.session, topicId]",[749,751],[1663,1663],[743,745],[786,788],"[props.session, tagId]",[1634,1634]]