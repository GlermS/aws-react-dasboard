[{"D:\\03-Yubbe\\aws-react-dashboard\\src\\index.js":"1","D:\\03-Yubbe\\aws-react-dashboard\\src\\pages\\index.js":"2","D:\\03-Yubbe\\aws-react-dashboard\\src\\pages\\context.js":"3","D:\\03-Yubbe\\aws-react-dashboard\\src\\aws-exports.js":"4","D:\\03-Yubbe\\aws-react-dashboard\\src\\components\\footer.js":"5","D:\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\index.js":"6","D:\\03-Yubbe\\aws-react-dashboard\\src\\components\\sideMenu\\index.js":"7","D:\\03-Yubbe\\aws-react-dashboard\\src\\components\\loadingScreen\\index.js":"8","D:\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\users\\create-users.js":"9","D:\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\topics\\update-topic.js":"10","D:\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\meetings\\create-meetings.js":"11","D:\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\meetings\\update-meetings.js":"12","D:\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\topics\\create-topic.js":"13","D:\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\users\\update-users.js":"14","D:\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\tags\\create-tag.js":"15","D:\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\tags\\update-tag.js":"16","D:\\03-Yubbe\\aws-react-dashboard\\src\\utils\\users.js":"17","D:\\03-Yubbe\\aws-react-dashboard\\src\\utils\\tags.js":"18","D:\\03-Yubbe\\aws-react-dashboard\\src\\utils\\topics.js":"19","D:\\03-Yubbe\\aws-react-dashboard\\src\\utils\\meetings.js":"20","D:\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\meetings\\index.js":"21","D:\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\users\\index.js":"22","D:\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\topics\\index.js":"23","D:\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\tags\\index.js":"24","D:\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\principal\\index.js":"25","D:\\03-Yubbe\\aws-react-dashboard\\src\\components\\card\\index.js":"26","D:\\03-Yubbe\\aws-react-dashboard\\src\\utils\\window.js":"27","D:\\03-Yubbe\\aws-react-dashboard\\src\\serviceWorkerRegistration.js":"28"},{"size":650,"mtime":1641153203879,"results":"29","hashOfConfig":"30"},{"size":2485,"mtime":1633980618844,"results":"31","hashOfConfig":"30"},{"size":107,"mtime":1629320282550,"results":"32","hashOfConfig":"30"},{"size":566,"mtime":1627905587342,"results":"33","hashOfConfig":"30"},{"size":425,"mtime":1611945210617,"results":"34","hashOfConfig":"30"},{"size":4555,"mtime":1630328330379,"results":"35","hashOfConfig":"30"},{"size":1625,"mtime":1633980007089,"results":"36","hashOfConfig":"30"},{"size":902,"mtime":1629320886238,"results":"37","hashOfConfig":"30"},{"size":1758,"mtime":1629897246837,"results":"38","hashOfConfig":"30"},{"size":2437,"mtime":1629980576897,"results":"39","hashOfConfig":"30"},{"size":1774,"mtime":1648311133771,"results":"40","hashOfConfig":"30"},{"size":3293,"mtime":1633975889732,"results":"41","hashOfConfig":"30"},{"size":2047,"mtime":1630325973670,"results":"42","hashOfConfig":"30"},{"size":2201,"mtime":1633977325709,"results":"43","hashOfConfig":"30"},{"size":1447,"mtime":1630326322446,"results":"44","hashOfConfig":"30"},{"size":2148,"mtime":1629982031961,"results":"45","hashOfConfig":"30"},{"size":2964,"mtime":1629896865559,"results":"46","hashOfConfig":"30"},{"size":2953,"mtime":1629981600064,"results":"47","hashOfConfig":"30"},{"size":2985,"mtime":1629979390298,"results":"48","hashOfConfig":"30"},{"size":3454,"mtime":1630328230328,"results":"49","hashOfConfig":"30"},{"size":3981,"mtime":1648311130622,"results":"50","hashOfConfig":"30"},{"size":2828,"mtime":1641154473827,"results":"51","hashOfConfig":"30"},{"size":3580,"mtime":1633974696062,"results":"52","hashOfConfig":"30"},{"size":2736,"mtime":1633972268487,"results":"53","hashOfConfig":"30"},{"size":3997,"mtime":1648311743589,"results":"54","hashOfConfig":"30"},{"size":3789,"mtime":1633977688499,"results":"55","hashOfConfig":"30"},{"size":604,"mtime":1633980325356,"results":"56","hashOfConfig":"30"},{"size":5089,"mtime":1641154640943,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1gwb4wr",{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"60"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"60"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"60"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"60"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"60"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"60"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"D:\\03-Yubbe\\aws-react-dashboard\\src\\index.js",[],["128","129"],"D:\\03-Yubbe\\aws-react-dashboard\\src\\pages\\index.js",["130","131","132","133"],"import './style.css'\r\nimport { withCookies} from 'react-cookie';\r\nimport Dashboard from './dashboard'\r\nimport Footer from '../components/footer';\r\nimport {useState, useEffect } from 'react';\r\nimport SideMenu from '../components/sideMenu';\r\nimport Amplify, {Auth}  from 'aws-amplify';\r\nimport awsconfig from '../aws-exports';\r\nimport LoadingScreen from '../components/loadingScreen';\r\nimport LoadingContext from './context'\r\nimport useWindowDimensions from '../utils/window'\r\nAmplify.configure(awsconfig);\r\n\r\nfunction Home(props){\r\n  const [session, setSession] = useState({authToken:'', userId:''})\r\n  const [name, setName] = useState('')\r\n  const [role, setRole] = useState('admin')\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [ms, setMs] = useState(true)\r\n  const {width,height} =useWindowDimensions()\r\n  useEffect(()=>{\r\n    getToken();    \r\n  }, [session])\r\n\r\n  async function getToken(){\r\n    let sessionInfo = await Auth.currentSession()\r\n      if(session.authToken !== sessionInfo.idToken.jwtToken){\r\n        session.authToken = sessionInfo.idToken.jwtToken\r\n        setSession(session)\r\n      }\r\n     return session\r\n  }\r\n\r\n  const options = {\r\n    'client':[\r\n      {path:'/', text:'Principal'},\r\n      {path:'/meetings', text:'Meetings'}\r\n  ],\r\n    'moderator':[\r\n      {path:'/', text:'Principal'},\r\n      {path:'/meetings', text:'Meetings'}\r\n  ],\r\n    'admin':[\r\n      {path:'/', text:'Principal'},\r\n      {path:'/meetings', text:'Meetings'},\r\n      {path:'/users', text:'Users'},\r\n      {path:'/topics', text:'Topics'},\r\n      {path:'/tags', text:'Tags'}      \r\n  ],\r\n  }\r\n\r\n  const st = ()=>{\r\n    if(width>600){\r\n      return false\r\n    }else{\r\n      return ms\r\n    }\r\n  }\r\n  return (\r\n    \r\n    <div className=\"container\" id=\"home\">\r\n      {/* {this.redirect()} */}\r\n     \r\n      <SideMenu username={name} options ={options[role]} mobileState = {st()}></SideMenu>\r\n      <div id=\"sidebar-button\"><button onClick = {()=>{setMs(!ms)}}>menu</button></div>\r\n      {/* logout={this.logoutFunc} */}\r\n      <LoadingContext.Provider value={{isLoading, setIsLoading}} className='content'>\r\n          <Dashboard auth = {role} username ={name} getToken={async ()=> await getToken()}/>\r\n          <LoadingScreen></LoadingScreen>\r\n      </LoadingContext.Provider>\r\n       \r\n      <Footer />\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\n\r\n\r\nexport default withCookies(Home);\r\n  \r\n/*\r\nHome.getInitialProps = async (ctx)=>{\r\n  const resp  =await verifySession(ctx);\r\n  return resp\r\n}*/\r\n","D:\\03-Yubbe\\aws-react-dashboard\\src\\pages\\context.js",[],"D:\\03-Yubbe\\aws-react-dashboard\\src\\aws-exports.js",[],"D:\\03-Yubbe\\aws-react-dashboard\\src\\components\\footer.js",[],"D:\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\index.js",["134"],"// import React from 'react'\r\nimport { withCookies, CookiesProvider} from 'react-cookie';\r\n// import CallsList from './calls/calls-list';\r\nimport {Switch, Route,withRouter} from 'react-router-dom'\r\nimport Meetings from './meetings';\r\nimport MyMeetings from './principal';\r\nimport Users from './users';\r\nimport Topics from './topics';\r\nimport Tags from './tags';\r\n// import Users from './users';\r\n// import CreateCall from './calls/createCall';\r\n// import RegisterUser from './users/register-user';\r\n// import CreateForm from '../../components/createForm';\r\n// import ListThemes from './themes/list-themes';\r\nimport { withAuthenticator } from '@aws-amplify/ui-react';\r\nimport CreateMeetingForm from './meetings/create-meetings';\r\nimport {Auth}  from 'aws-amplify';\r\nimport {useEffect, useState} from 'react';\r\nimport UpdateMeetingForm from './meetings/update-meetings';\r\nimport CreateUserForm from './users/create-users';\r\nimport UpdateUserForm from './users/update-users';\r\nimport CreateTopicForm from './topics/create-topic';\r\nimport UpdateTopicForm from './topics/update-topic';\r\nimport CreateTagForm from './tags/create-tag';\r\nimport UpdateTagForm from './tags/update-tag';\r\n\r\n\r\n\r\nfunction Dashboard(props){\r\n    const [session, setSession] = useState({authToken:'', userId:''});\r\n\r\n    async function getToken(){\r\n        let sessionInfo = await Auth.currentSession()\r\n            if(session.authToken !== sessionInfo.idToken.jwtToken){\r\n            console.log('Update token')\r\n            session.authToken = sessionInfo.idToken.jwtToken\r\n            setSession(session)\r\n            }\r\n            return session\r\n        }\r\n    useEffect(()=>{\r\n        getToken()\r\n    },[session])\r\n\r\n    return (\r\n        <Switch>\r\n            \r\n\r\n            <Route path=\"/profile\">\r\n            <CookiesProvider>\r\n            </CookiesProvider>\r\n            </Route>\r\n\r\n            <Route path=\"/meetings\">\r\n                <Switch>\r\n                    <Route path=\"/meetings/create-meeting\">\r\n                        <CreateMeetingForm session={session}></CreateMeetingForm>\r\n                    </Route>\r\n\r\n                    <Route path=\"/meetings/update-meeting\">\r\n                        <UpdateMeetingForm session={session}></UpdateMeetingForm>\r\n                    </Route>\r\n\r\n                    <Route path=\"/meetings\">\r\n                        <Meetings  getToken={async ()=> await getToken()}/>\r\n                    </Route>\r\n                </Switch>\r\n            </Route>\r\n\r\n            <Route path=\"/users\">\r\n                <Switch>\r\n                    <Route path=\"/users/create-user\">\r\n                        <CreateUserForm session={session}></CreateUserForm>\r\n                    </Route>\r\n\r\n                    <Route path=\"/users/update-user\">\r\n                        <UpdateUserForm session={session}></UpdateUserForm>\r\n                    </Route>\r\n\r\n                    <Route path=\"/users\">\r\n                        <Users  getToken={async ()=> await getToken()}/>\r\n                    </Route>\r\n                </Switch>\r\n            </Route>\r\n\r\n            <Route path=\"/topics\">\r\n                <Switch>\r\n                    <Route path=\"/topics/create-topic\">\r\n                        <CreateTopicForm session={session}></CreateTopicForm>\r\n                    </Route>\r\n\r\n                    <Route path=\"/topics/update-topic\">\r\n                        <UpdateTopicForm session={session}></UpdateTopicForm>\r\n                    </Route>\r\n\r\n                    <Route path=\"/topics\">\r\n                        <Topics  getToken={async ()=> await getToken()}/>\r\n                    </Route>\r\n                </Switch>\r\n            </Route>\r\n            \r\n            <Route path=\"/tags\">\r\n                <Switch>\r\n                    <Route path=\"/tags/create-tag\">\r\n                        <CreateTagForm session={session}></CreateTagForm>\r\n                    </Route>\r\n\r\n                    <Route path=\"/tags/update-tag\">\r\n                        <UpdateTagForm session={session}></UpdateTagForm>\r\n                    </Route>\r\n\r\n                    <Route path=\"/tags\">\r\n                        <Tags  getToken={async ()=> await getToken()}/>\r\n                    </Route>\r\n                </Switch>\r\n            </Route>\r\n            \r\n            <Route path=\"/\">\r\n            <CookiesProvider>\r\n                <MyMeetings getToken={async ()=> await getToken()} />\r\n            </CookiesProvider>\r\n            </Route>\r\n        </Switch>)\r\n    \r\n}\r\n\r\nexport default withAuthenticator(withRouter(withCookies(Dashboard)))","D:\\03-Yubbe\\aws-react-dashboard\\src\\components\\sideMenu\\index.js",[],"D:\\03-Yubbe\\aws-react-dashboard\\src\\components\\loadingScreen\\index.js",[],"D:\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\users\\create-users.js",["135"],"import { useContext, useEffect, useState } from 'react'\r\nimport {postUser} from  '../../../utils/users'\r\nimport moment from 'moment'\r\nimport { listTags } from '../../../utils/tags'\r\nimport LoadingContext from '../../context'\r\n\r\nfunction CreateUserForm(props){\r\n    const [tag, setTag] = useState('presentation')\r\n    const [start, setStart] = useState(moment().format('YYYY-MM-DDTh:mm:ss'))\r\n    const [tagsList, setTagsList] = useState([])\r\n    const {setIsLoading} = useContext(LoadingContext)\r\n    useEffect(()=>{\r\n        setIsLoading(true)\r\n        listTags(props.session).then((response)=>{\r\n            setTagsList(response.data)\r\n        }).catch((error)=>{\r\n            console.log(error)\r\n        })\r\n        setIsLoading(false)\r\n    },[])\r\n    const opionsList = ()=>{\r\n        return tagsList.map((tag)=>{\r\n            console.log(tag);\r\n            return <option value={tag.id}>{tag.tag_name}</option>\r\n        })\r\n    }\r\n    return(\r\n        <div className=\"create\">\r\n            <h1>Create a new call</h1>\r\n            <form className =\"create-form\" >\r\n                <label>\r\n                    <span>Tag:</span>\r\n                    <select name=\"tag\" id=\"tags\" onChange={(e)=>{setTag(e.target.value)}} value={tag}>\r\n                        {opionsList()}\r\n                    </select>\r\n                </label>\r\n                <label>\r\n                    <span>Start</span>\r\n                    <input type='datetime-local' value={start} onChange={(e)=>{setStart(e.target.value)}}></input>\r\n                </label>\r\n                <button type=\"submit\" onClick={(e)=>{e.preventDefault();postUser(props.session, {tag, start})}}>Enviar</button>\r\n            </form>\r\n        </div>);\r\n}\r\n\r\n\r\n\r\nexport default CreateUserForm;\r\n\r\n  \r\n\r\n","D:\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\topics\\update-topic.js",["136","137","138","139"],"import { useEffect, useState } from 'react'\r\nimport {getTopic, updateTopic} from  '../../../utils/topics'\r\nimport {useLocation} from \"react-router-dom\";\r\nimport moment from 'moment'\r\n\r\nfunction UpdateTopicForm(props){\r\n    const [name, setName] = useState('')\r\n    const [description, setDescription] = useState('')\r\n    const [tag, setTag] = useState('')\r\n    const [start, setStart] = useState(moment().format('YYYY-MM-DDTh:mm:ss'))\r\n    const topicId = useQuery().get('id')\r\n\r\n    useEffect(()=>{\r\n        getTopic(props.session, {topicId}).then((response)=>{\r\n            console.log(response.data)\r\n            if(response.data.topic_name){\r\n                setName(response.data.topic_name)\r\n            }\r\n            if(response.data.topic_description){\r\n                setDescription(response.data.topic_description)\r\n            }\r\n            if(response.data.tag_id){\r\n                setTag(response.data.tag_id)\r\n            }\r\n        }).catch((error)=>{\r\n            console.log(error)\r\n        });\r\n        \r\n    }, [])\r\n    // console.log(tag)\r\n    // console.log(start)\r\n    // console.log(id)\r\n\r\n    return(\r\n        <div className=\"create\">\r\n            <h1>Update a topic</h1>\r\n            <form className =\"create-form\" >\r\n                <label>\r\n                    <span>Name</span>\r\n                    <input type='text' value={name} onChange={(e)=>{setName(e.target.value)}}></input>\r\n                </label>\r\n                <label>\r\n                    <span>Description</span>\r\n                    <input type='text' value={description} onChange={(e)=>{setDescription(e.target.value)}}></input>\r\n                </label>\r\n                {/* <label>\r\n                    <span>Email</span> */}\r\n                    {/* <input type='text' value={tag} onChange={(e)=>{setTag(e.target.value)}}></input> */}\r\n                {/* </label>\r\n                <label>\r\n                    <span>Start</span> */}\r\n                    {/* <input type='datetime-local' value={start} onChange={(e)=>{setStart(e.target.value)}}></input> */}\r\n                {/* </label> */}\r\n                <button type=\"submit\" onClick={(e)=>{e.preventDefault();updateTopic(props.session, {topicId, topicName:name, topicDescription:description})}}>Enviar</button>\r\n            </form>\r\n        </div>);\r\n}\r\n\r\n\r\n\r\nexport default UpdateTopicForm;\r\n\r\nfunction useQuery() {\r\n  return new URLSearchParams(useLocation().search);\r\n}  \r\n\r\n","D:\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\meetings\\create-meetings.js",["140"],"D:\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\meetings\\update-meetings.js",["141","142"],"import { useEffect, useState, useContext } from 'react'\r\nimport {getMeeting, updateMeeting} from  '../../../utils/meetings'\r\nimport {useLocation} from \"react-router-dom\";\r\nimport moment from 'moment'\r\nimport { listTags } from '../../../utils/tags';\r\nimport {Auth}  from 'aws-amplify';\r\nimport LoadingContext from '../../context';\r\n\r\n\r\nfunction UpdateMeetingForm(props){\r\n    const [tag, setTag] = useState('')\r\n    const [start, setStart] = useState(moment().format('YYYY-MM-DDTh:mm:ss'))\r\n    const meetingId = useQuery().get('id')\r\n    const [update, setUpdate] = useState(true)\r\n    const {isLoading, setIsLoading} = useContext(LoadingContext)\r\n\r\n    const [tags, setTags] = useState([])\r\n\r\n    const [session, setSession] = useState({authToken:'', userId:''})\r\n\r\n    async function getToken(){\r\n        let sessionInfo = await Auth.currentSession()\r\n            if(session.authToken !== sessionInfo.idToken.jwtToken){\r\n            console.log('Update token')\r\n            session.authToken = sessionInfo.idToken.jwtToken\r\n            setSession(session)\r\n            }\r\n            return session\r\n        }\r\n    const updateFunc = async()=>{\r\n        await getToken()\r\n        const response = await listTags(session)\r\n        console.log(response)\r\n        if(response.status===200){\r\n            const mts = response.data.map(element => {\r\n                console.log(element)\r\n                const {id, tag_color:color, tag_name:name} = element\r\n                return {\r\n                    tagId: id,\r\n                    color,\r\n                    name\r\n                }\r\n            });\r\n            if(tags!==mts){            \r\n                setTags(mts)\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(update){\r\n            setIsLoading(true);\r\n            updateFunc();\r\n            setUpdate(false);\r\n            setIsLoading(false)\r\n        }\r\n        getMeeting(props.session, {meetingId}).then((response)=>{\r\n            console.log(response.data)\r\n            setTag(response.data.tag);\r\n            setStart(response.data.start);\r\n        }).catch((error)=>{\r\n            console.log(error)\r\n        });\r\n        \r\n    }, [])\r\n    // console.log(tag)\r\n    // console.log(start)\r\n    // console.log(id)\r\n\r\n    return(\r\n        <div className=\"create\">\r\n            <h1>Update a new call</h1>\r\n            <form className =\"create-form\" >\r\n                <label>\r\n                    <span>Tag:</span>\r\n                    <select name=\"tag\" id=\"tags\" onChange={(e)=>{setTag(e.target.value)}} value={tag}>\r\n                        {tags.map((t) =>{\r\n                                return <option value={t.tagId}>{t.name}</option>\r\n                        })}\r\n                    </select>\r\n                </label>\r\n                <label>\r\n                    <span>Start</span>\r\n                    <input type='datetime-local' value={start} onChange={(e)=>{setStart(e.target.value)}}></input>\r\n                </label>\r\n                <button type=\"submit\" onClick={(e)=>{e.preventDefault();updateMeeting(props.session, {meetingId, tag, start})}}>Enviar</button>\r\n            </form>\r\n        </div>);\r\n}\r\n\r\n\r\n\r\nexport default UpdateMeetingForm;\r\n\r\nfunction useQuery() {\r\n  return new URLSearchParams(useLocation().search);\r\n}  \r\n\r\n","D:\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\topics\\create-topic.js",["143","144"],"import { useContext, useEffect, useState } from 'react'\r\nimport {postTopic} from  '../../../utils/topics'\r\nimport moment from 'moment'\r\nimport { listTags } from '../../../utils/tags'\r\nimport LoadingContext from '../../context'\r\n\r\nfunction CreateTopicForm(props){\r\n    const [tag, setTag] = useState('presentation')\r\n    const [name, setName] = useState('')\r\n    const [description, setDescription] = useState('')\r\n    const [tagsList, setTagsList] = useState([])\r\n    const {setIsLoading} = useContext(LoadingContext)\r\n    useEffect(()=>{\r\n        setIsLoading(true)\r\n        listTags(props.session).then((response)=>{\r\n            setTagsList(response.data)\r\n        }).catch((error)=>{\r\n            console.log(error)\r\n        })\r\n        setIsLoading(false)\r\n    },[])\r\n    const opionsList = ()=>{\r\n        return tagsList.map((tag)=>{\r\n            console.log(tag);\r\n            return <option value={tag.id}>{tag.tag_name}</option>\r\n        })\r\n    }\r\n    return(\r\n        <div className=\"create\">\r\n            <h1>Create a new call</h1>\r\n            <form className =\"create-form\" >\r\n                <label>\r\n                    <span>Name</span>\r\n                    <input type='text' value={name} onChange={(e)=>{setName(e.target.value)}}></input>\r\n                </label>\r\n                <label>\r\n                    <span>Description</span>\r\n                    <input type='text' value={description} onChange={(e)=>{setDescription(e.target.value)}}></input>\r\n                </label>\r\n                <label>\r\n                    <span>Tag:</span>\r\n                    <select name=\"tag\" id=\"tags\" onChange={(e)=>{setTag(e.target.value)}} value={tag}>\r\n                        {opionsList()}\r\n                    </select>\r\n                </label>\r\n                \r\n                <button type=\"submit\" onClick={(e)=>{e.preventDefault();postTopic(props.session, {tagId:tag, topicName:name, topicDescription:description})}}>Enviar</button>\r\n            </form>\r\n        </div>);\r\n}\r\n\r\n\r\n\r\nexport default CreateTopicForm;\r\n\r\n  \r\n\r\n","D:\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\users\\update-users.js",["145","146","147"],"import { useEffect, useState } from 'react'\r\nimport {getUser, updateUser} from  '../../../utils/users'\r\nimport {useLocation} from \"react-router-dom\";\r\nimport moment from 'moment'\r\n\r\nfunction UpdateUserForm(props){\r\n    const [fname, setFname] = useState('')\r\n    const [lname, setLname] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [start, setStart] = useState(moment().format('YYYY-MM-DDTh:mm:ss'))\r\n    const userId = useQuery().get('id')\r\n\r\n    useEffect(()=>{\r\n        getUser(props.session, {userId}).then((response)=>{\r\n            console.log(response.data)\r\n            if(response.data.first_name){\r\n                setFname(response.data.first_name)\r\n            }\r\n            if(response.data.last_name){\r\n                setLname(response.data.last_name)\r\n            }\r\n            if(response.data.email){\r\n                setEmail(response.data.email)\r\n            }\r\n            setStart(response.data.start);\r\n        }).catch((error)=>{\r\n            console.log(error)\r\n        });\r\n        \r\n    }, [])\r\n    // console.log(tag)\r\n    // console.log(start)\r\n    // console.log(id)\r\n\r\n    return(\r\n        <div className=\"create\">\r\n            <h1>Update a user</h1>\r\n            <form className =\"create-form\" >\r\n                <label>\r\n                    <span>First Name</span>\r\n                    <input type='text' value={fname} onChange={(e)=>{setFname(e.target.value)}}></input>\r\n                </label>\r\n                <label>\r\n                    <span>Last Name</span>\r\n                    <input type='text' value={lname} onChange={(e)=>{setLname(e.target.value)}}></input>\r\n                </label>\r\n                <label>\r\n                    {/* <span>Email</span> */}\r\n                    {/* <input type='text' value={email} onChange={(e)=>{setEmail(e.target.value)}}></input> */}\r\n                </label>\r\n\r\n                <button type=\"submit\" onClick={(e)=>{e.preventDefault();updateUser(props.session, {userId, first_name:fname, last_name:lname})}}>Enviar</button>\r\n            </form>\r\n        </div>);\r\n}\r\n\r\n\r\n\r\nexport default UpdateUserForm;\r\n\r\nfunction useQuery() {\r\n  return new URLSearchParams(useLocation().search);\r\n}  \r\n\r\n","D:\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\tags\\create-tag.js",["148","149","150","151"],"import { useContext, useEffect, useState } from 'react'\r\nimport {postTag} from  '../../../utils/tags'\r\nimport moment from 'moment'\r\nimport { listTags } from '../../../utils/tags'\r\nimport LoadingContext from '../../context'\r\n\r\nfunction CreateTagForm(props){\r\n    const [name, setName] = useState('')\r\n    const [color, setColor] = useState('#CCCCCC')\r\n    const {setIsLoading} = useContext(LoadingContext)\r\n    // useEffect(()=>{\r\n    //     setIsLoading(true)\r\n    //     listTags(props.session).then((response)=>{\r\n    //         setTagsList(response.data)\r\n    //     }).catch((error)=>{\r\n    //         console.log(error)\r\n    //     })\r\n    //     setIsLoading(false)\r\n    // },[])\r\n\r\n    return(\r\n        <div className=\"create\">\r\n            <h1>Create a new call</h1>\r\n            <form className =\"create-form\" >\r\n                <label>\r\n                    <span>Name</span>\r\n                    <input type='text' value={name} onChange={(e)=>{setName(e.target.value)}}></input>\r\n                </label>\r\n                <label>\r\n                    <span>Color</span>\r\n                    <input type='color' value={color} onChange={(e)=>{setColor(e.target.value)}}></input>\r\n                </label>\r\n                <button type=\"submit\" onClick={(e)=>{e.preventDefault();postTag(props.session, {tagName:name, tagColor:color})}}>Enviar</button>\r\n            </form>\r\n        </div>);\r\n}\r\n\r\n\r\n\r\nexport default CreateTagForm;\r\n\r\n  \r\n\r\n","D:\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\tags\\update-tag.js",["152","153"],"import { useEffect, useState } from 'react'\r\nimport {getTag, updateTag} from  '../../../utils/tags'\r\nimport {useLocation} from \"react-router-dom\";\r\nimport moment from 'moment'\r\n\r\nfunction UpdateTagForm(props){\r\n    const [name, setName] = useState('')\r\n    const [color, setColor] = useState('#CCCCCC')\r\n    const tagId = useQuery().get('id')\r\n\r\n    useEffect(()=>{\r\n        getTag(props.session, {tagId}).then((response)=>{\r\n            console.log(response.data)\r\n            if(response.data.tag_name){\r\n                setName(response.data.tag_name)\r\n            }\r\n            if(response.data.tag_color){\r\n                setColor(response.data.tag_color)\r\n            }\r\n            \r\n\r\n        }).catch((error)=>{\r\n            console.log(error)\r\n        });\r\n        \r\n    }, [])\r\n    // console.log(tag)\r\n    // console.log(start)\r\n    // console.log(id)\r\n\r\n    return(\r\n        <div className=\"create\">\r\n            <h1>Update a tag</h1>\r\n            <form className =\"create-form\" >\r\n                <label>\r\n                    <span>Name</span>\r\n                    <input type='text' value={name} onChange={(e)=>{setName(e.target.value)}}></input>\r\n                </label>\r\n                <label>\r\n                    <span>Color</span>\r\n                    <input type='color' value={color} onChange={(e)=>{setColor(e.target.value)}}></input>\r\n                </label>\r\n                {/* <label>\r\n                    <span>Email</span> */}\r\n                    {/* <input type='text' value={tag} onChange={(e)=>{setTag(e.target.value)}}></input> */}\r\n                {/* </label>\r\n                <label>\r\n                    <span>Start</span> */}\r\n                    {/* <input type='datetime-local' value={start} onChange={(e)=>{setStart(e.target.value)}}></input> */}\r\n                {/* </label> */}\r\n                <button type=\"submit\" onClick={(e)=>{e.preventDefault();updateTag(props.session, {tagId, tagName:name, tagColor:color})}}>Enviar</button>\r\n            </form>\r\n        </div>);\r\n}\r\n\r\n\r\n\r\nexport default UpdateTagForm;\r\n\r\nfunction useQuery() {\r\n  return new URLSearchParams(useLocation().search);\r\n}  \r\n\r\n","D:\\03-Yubbe\\aws-react-dashboard\\src\\utils\\users.js",[],"D:\\03-Yubbe\\aws-react-dashboard\\src\\utils\\tags.js",[],"D:\\03-Yubbe\\aws-react-dashboard\\src\\utils\\topics.js",[],"D:\\03-Yubbe\\aws-react-dashboard\\src\\utils\\meetings.js",[],"D:\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\meetings\\index.js",["154","155","156"],"D:\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\users\\index.js",["157","158","159"],"import {useState, useEffect, useContext } from 'react';\r\nimport axios from 'axios'\r\nimport {Auth}  from 'aws-amplify';\r\nimport Card from '../../../components/card';\r\nimport {Link} from 'react-router-dom'\r\nimport {withRouter} from 'react-router-dom'\r\nimport { deleteUser, listUsers, joinUser } from '../../../utils/users';\r\nimport moment from 'moment';\r\nimport './style.css';\r\nimport LoadingContext from '../../context';\r\n\r\n\r\nfunction Users(props){\r\nconst [users, setUsers] = useState([])\r\nconst [update, setUpdate] = useState(true)\r\nconst [session, setSession] = useState({authToken:'', userId:''})\r\nconst {isLoading, setIsLoading} = useContext(LoadingContext)\r\n\r\n\r\nconst updateFunc = async()=>{\r\n    await getToken()\r\n    var response = await listUsers(session)\r\n    if(response.status===200){\r\n        const mts = response.data.map(element => {\r\n            console.log(element)\r\n            const {id, email, start, firstName:fname} = element\r\n            return {\r\n                userId: id,\r\n                fname,\r\n                email,\r\n                start,\r\n            }\r\n        });\r\n        if(users!==mts){\r\n            setUsers(mts)\r\n        }\r\n    }\r\n    \r\n}\r\n\r\n\r\nasync function getToken(){\r\n    let sessionInfo = await Auth.currentSession()\r\n        if(session.authToken !== sessionInfo.idToken.jwtToken){\r\n        console.log('Update token')\r\n        session.authToken = sessionInfo.idToken.jwtToken\r\n        setSession(session)\r\n        }\r\n        return session\r\n    }\r\n\r\nuseEffect(()=>{\r\n    if(update){\r\n        setIsLoading(true);\r\n        updateFunc();\r\n        setUpdate(false);\r\n        setIsLoading(false)\r\n    }\r\n})\r\n\r\nreturn(\r\n    <div className=\"my-calls scroll section\">\r\n    <div className=\"subheader\">\r\n        <h2 >Available Calls</h2>\r\n        <Link className='create-button' to='/users/create-user'>New user</Link>\r\n    </div>\r\n    <div className=\"my-calls-content\">\r\n        <div className = \"calls-list\">\r\n            {\r\n                users.map((user, i) =>{\r\n                    let userId = user.userId\r\n                    let startTime = moment(user.start)\r\n                    console.log(user)\r\n                    return (\r\n                        <Card name = {user.fname} cardId = {userId} type='user' updatePath='/users/update-user' fields={[\r\n                            {label: 'Email', value: user.email},\r\n                            {label: 'Start', value: startTime.format(\"DD/MM/YYYY\")},\r\n                        ]\r\n                        } key ={i} deleteFunc={async()=>{await deleteUser(session, {userId}); updateFunc()}} joinFunc={async ()=>{await joinUser(session, {userId}); updateFunc()}}></Card>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n         \r\n    </div>         \r\n    </div>\r\n)\r\n}\r\n\r\nexport default withRouter(Users)\r\n\r\n  ","D:\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\topics\\index.js",["160","161","162","163"],"import {useState, useEffect, useContext } from 'react';\r\nimport axios from 'axios'\r\nimport {Auth}  from 'aws-amplify';\r\nimport Card from '../../../components/card';\r\nimport {Link} from 'react-router-dom'\r\nimport {withRouter} from 'react-router-dom'\r\nimport { deleteTopic, listTopics, joinTopic } from '../../../utils/topics';\r\nimport moment from 'moment';\r\nimport './style.css';\r\nimport LoadingContext from '../../context';\r\nimport { listTags } from '../../../utils/tags';\r\n\r\n\r\nfunction Topics(props){\r\nconst [topics, setTopics] = useState([])\r\nconst [update, setUpdate] = useState(true)\r\nconst [session, setSession] = useState({authToken:'', topicId:''})\r\nconst {isLoading, setIsLoading} = useContext(LoadingContext)\r\nconst [tags, setTags] = useState({})\r\n\r\nconst updateFunc = async()=>{\r\n    await getToken()\r\n    var response = await listTopics(session)\r\n    if(response.status===200){\r\n        const mts = response.data.map(element => {\r\n            console.log(element)\r\n            const {id, topic_description:description, topic_name:name} = element\r\n            return {\r\n                topicId: id,\r\n                description,\r\n                name\r\n            }\r\n        });\r\n        if(topics!==mts){\r\n            setTopics(mts)\r\n        }\r\n        \r\n    }\r\n    response = await listTags(session)\r\n    console.log(response)\r\n    if(response.status===200){\r\n        const mts = response.data.map(element => {\r\n            console.log(element)\r\n            const {id, tag_color:color, tag_name:name} = element\r\n            return {\r\n                tagId: id,\r\n                color,\r\n                name\r\n            }\r\n        });\r\n        var d = {}\r\n        mts.forEach(element => {\r\n            d = {...d, [element.tagId]: element}\r\n        });\r\n\r\n        if(tags!==d){            \r\n            setTags(d)\r\n        }\r\n    }\r\n    \r\n}\r\n\r\n\r\nasync function getToken(){\r\n    let sessionInfo = await Auth.currentSession()\r\n        if(session.authToken !== sessionInfo.idToken.jwtToken){\r\n        console.log('Update token')\r\n        session.authToken = sessionInfo.idToken.jwtToken\r\n        setSession(session)\r\n        }\r\n        return session\r\n    }\r\n\r\nuseEffect(()=>{\r\n    if(update){\r\n        setIsLoading(true);\r\n        updateFunc();\r\n        setUpdate(false);\r\n        setIsLoading(false)\r\n    }\r\n})\r\n\r\nreturn(\r\n    <div className=\"my-calls scroll section\">\r\n    <div className=\"subheader\">\r\n        <h2 >Available Topics</h2>\r\n        <Link className='create-button' to='/topics/create-topic'>New topic</Link>\r\n    </div>\r\n    <div className=\"my-calls-content\">\r\n        <div className = \"calls-list\">\r\n            {\r\n                topics.map((topic, i) =>{\r\n                    let topicId = topic.topicId\r\n                    let startTime = moment(topic.start)\r\n                    console.log(topic)\r\n                    console.log(tags)\r\n                    return (\r\n                        <Card name = {topic.fname} color = {tags[topic.ta]} cardId = {topicId} type='topic' updatePath='/topics/update-topic' fields={[\r\n                            {label: 'Name', value: topic.name},\r\n                            {label: 'Description', value: topic.description},\r\n                        ]\r\n                        } key ={i} deleteFunc={async()=>{await deleteTopic(session, {topicId}); updateFunc()}} joinFunc={async ()=>{await joinTopic(session, {topicId}); updateFunc()}}></Card>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n         \r\n    </div>         \r\n    </div>\r\n)\r\n}\r\n\r\nexport default withRouter(Topics)\r\n\r\n  ","D:\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\tags\\index.js",["164","165","166","167"],"import {useState, useEffect, useContext } from 'react';\r\nimport axios from 'axios'\r\nimport {Auth}  from 'aws-amplify';\r\nimport Card from '../../../components/card';\r\nimport {Link} from 'react-router-dom'\r\nimport {withRouter} from 'react-router-dom'\r\nimport { deleteTag, listTags} from '../../../utils/tags';\r\nimport moment from 'moment';\r\nimport './style.css';\r\nimport LoadingContext from '../../context';\r\n\r\n\r\nfunction Tags(props){\r\nconst [tags, setTags] = useState([])\r\nconst [update, setUpdate] = useState(true)\r\nconst [session, setSession] = useState({authToken:'', tagId:''})\r\nconst {isLoading, setIsLoading} = useContext(LoadingContext)\r\n\r\nconst updateFunc = async()=>{\r\n    await getToken()\r\n    const response = await listTags(session)\r\n    console.log(response)\r\n    if(response.status===200){\r\n        const mts = response.data.map(element => {\r\n            console.log(element)\r\n            const {id, tag_color:color, tag_name:name} = element\r\n            return {\r\n                tagId: id,\r\n                color,\r\n                name\r\n            }\r\n        });\r\n        if(tags!==mts){\r\n            setTags(mts)\r\n        }\r\n        \r\n    }\r\n    \r\n}\r\n\r\n\r\nasync function getToken(){\r\n    let sessionInfo = await Auth.currentSession()\r\n        if(session.authToken !== sessionInfo.idToken.jwtToken){\r\n        console.log('Update token')\r\n        session.authToken = sessionInfo.idToken.jwtToken\r\n        setSession(session)\r\n        }\r\n        return session\r\n    }\r\n\r\nuseEffect(()=>{\r\n    if(update){\r\n        setIsLoading(true);\r\n        updateFunc();\r\n        setUpdate(false);\r\n        setIsLoading(false)\r\n    }\r\n})\r\n\r\nreturn(\r\n    <div className=\"my-calls scroll section\">\r\n    <div className=\"subheader\">\r\n        <h2 >Available Tags</h2>\r\n        <Link className='create-button' to='/tags/create-tag'>New tag</Link>\r\n    </div>\r\n    <div className=\"my-calls-content\">\r\n        <div className = \"calls-list\">\r\n            {\r\n                tags.map((tag, i) =>{\r\n                    let tagId = tag.tagId\r\n                    let startTime = moment(tag.start)\r\n                    console.log(tag)\r\n                    return (\r\n                        <Card name = {tag.name} cardId = {tagId} type='tag' color={tag.color} updatePath='/tags/update-tag' fields={[\r\n                            {label: 'Name', value: tag.name},\r\n                            {label: 'Color', value: tag.color, type: \"color\"},\r\n                        ]\r\n                        } key ={i} deleteFunc={async()=>{await deleteTag(session, {tagId}); updateFunc()}}></Card>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n         \r\n    </div>         \r\n    </div>\r\n)\r\n}\r\n\r\nexport default withRouter(Tags)\r\n\r\n  ","D:\\03-Yubbe\\aws-react-dashboard\\src\\pages\\dashboard\\principal\\index.js",["168","169","170","171"],"D:\\03-Yubbe\\aws-react-dashboard\\src\\components\\card\\index.js",["172","173","174"],"import {Link} from 'react-router-dom'\r\nimport { deleteMeeting } from '../../utils/meetings'\r\nimport './style.css'\r\n\r\nfunction Card(props){\r\n    const updateButton = ()=>{\r\n        if (props.updatePath){\r\n            return <Link to={{\r\n                pathname: props.updatePath,\r\n                search: \"?id=\"+props.cardId\r\n            }}>update</Link>\r\n        }\r\n    }\r\n    const deleteButton = ()=>{\r\n        if (props.deleteFunc){\r\n            return <button onClick={(e)=>{\r\n                e.preventDefault();\r\n                props.deleteFunc();\r\n            }}>delete</button>\r\n        }\r\n    }\r\n    const joinButton = ()=>{\r\n        if (props.joinFunc){\r\n            return <button onClick={(e)=>{\r\n                e.preventDefault();\r\n                props.joinFunc();\r\n            }}>Join</button>\r\n        }\r\n    }\r\n    const startButton = ()=>{\r\n        if (props.joinFunc){\r\n            return <a className=\"start-button\" href={'https://meeting.yubbe.club/'+props.cardId}>Join</a>\r\n        }\r\n    }\r\n\r\n\r\n    switch (props.type) {\r\n        case 'my-meeting':\r\n            return(\r\n                <div className = 'card'>\r\n                    <div className='card-header' style={{'backgroundColor':props.color}}>\r\n                        <h3>{props.tag}</h3>\r\n                    </div>\r\n                    <div className='card-body'>\r\n                    {props.fields.map((val, i )=>{\r\n                        // console.log(val, i)\r\n                        return renderField(val, i)\r\n                    })}\r\n                    </div>\r\n                    <div className='card-footer'>\r\n                        {startButton()}\r\n                    </div>\r\n                </div>\r\n            )\r\n          break;\r\n        case 'meeting':\r\n            return(\r\n                <div className = 'card' >\r\n                    <div className='card-header' style={{'backgroundColor':props.color}}>\r\n                        <h3>{props.tag}</h3>\r\n                    </div>\r\n                    <div className='card-body'>\r\n                    {props.fields.map((val, i )=>{\r\n                        // console.log(val, i)\r\n                        return renderField(val, i)\r\n                    })}\r\n                    </div>\r\n                    <div className='card-footer'>\r\n                        {joinButton()}\r\n                        {updateButton()}\r\n                        {deleteButton()}\r\n                    </div>\r\n                </div>\r\n            )\r\n          break;\r\n        default:\r\n            return(\r\n                <div className = 'card' >\r\n                    <div className='card-header' style={{'backgroundColor':props.color}}>\r\n                        <h3>{props.name}</h3>\r\n                    </div>\r\n                    <div className='card-body'>\r\n                    {props.fields.map((val, i )=>{\r\n                        // console.log(val, i)\r\n                        return renderField(val, i)\r\n                    })}\r\n                    </div>\r\n                    <div className='card-footer'>\r\n                        {updateButton()}\r\n                        {deleteButton()}\r\n                    </div>\r\n                </div>\r\n            )\r\n      }\r\n      \r\n   \r\n}\r\n\r\nexport default Card\r\n\r\nconst renderField = (field, key) =>{\r\n    const output = ()=>{\r\n        switch(field.type){\r\n            case \"color\":\r\n                return <div  className=\"field-value\" ><div style={{background:field.value, height:\"1rem\", width:\"1rem\"}}></div></div>\r\n            default:\r\n                return <span className = 'field-value'>{field.value}</span>\r\n        }\r\n    }\r\n    return(\r\n        <div className = 'field' key ={key}>\r\n            <b className = 'label'>{field.label}</b>\r\n            {output()}\r\n        </div>\r\n    )\r\n}","D:\\03-Yubbe\\aws-react-dashboard\\src\\utils\\window.js",[],"D:\\03-Yubbe\\aws-react-dashboard\\src\\serviceWorkerRegistration.js",[],{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","severity":1,"message":"180","line":16,"column":16,"nodeType":"181","messageId":"182","endLine":16,"endColumn":23},{"ruleId":"179","severity":1,"message":"183","line":17,"column":16,"nodeType":"181","messageId":"182","endLine":17,"endColumn":23},{"ruleId":"179","severity":1,"message":"184","line":20,"column":16,"nodeType":"181","messageId":"182","endLine":20,"endColumn":22},{"ruleId":"185","severity":1,"message":"186","line":23,"column":6,"nodeType":"187","endLine":23,"endColumn":15,"suggestions":"188"},{"ruleId":"185","severity":1,"message":"186","line":43,"column":7,"nodeType":"187","endLine":43,"endColumn":16,"suggestions":"189"},{"ruleId":"185","severity":1,"message":"190","line":20,"column":7,"nodeType":"187","endLine":20,"endColumn":9,"suggestions":"191"},{"ruleId":"179","severity":1,"message":"192","line":9,"column":12,"nodeType":"181","messageId":"182","endLine":9,"endColumn":15},{"ruleId":"179","severity":1,"message":"193","line":10,"column":12,"nodeType":"181","messageId":"182","endLine":10,"endColumn":17},{"ruleId":"179","severity":1,"message":"194","line":10,"column":19,"nodeType":"181","messageId":"182","endLine":10,"endColumn":27},{"ruleId":"185","severity":1,"message":"195","line":29,"column":8,"nodeType":"187","endLine":29,"endColumn":10,"suggestions":"196"},{"ruleId":"185","severity":1,"message":"190","line":20,"column":7,"nodeType":"187","endLine":20,"endColumn":9,"suggestions":"197"},{"ruleId":"179","severity":1,"message":"198","line":15,"column":12,"nodeType":"181","messageId":"182","endLine":15,"endColumn":21},{"ruleId":"185","severity":1,"message":"199","line":66,"column":8,"nodeType":"187","endLine":66,"endColumn":10,"suggestions":"200"},{"ruleId":"179","severity":1,"message":"201","line":3,"column":8,"nodeType":"181","messageId":"182","endLine":3,"endColumn":14},{"ruleId":"185","severity":1,"message":"190","line":21,"column":7,"nodeType":"187","endLine":21,"endColumn":9,"suggestions":"202"},{"ruleId":"179","severity":1,"message":"203","line":9,"column":12,"nodeType":"181","messageId":"182","endLine":9,"endColumn":17},{"ruleId":"179","severity":1,"message":"193","line":10,"column":12,"nodeType":"181","messageId":"182","endLine":10,"endColumn":17},{"ruleId":"185","severity":1,"message":"204","line":30,"column":8,"nodeType":"187","endLine":30,"endColumn":10,"suggestions":"205"},{"ruleId":"179","severity":1,"message":"206","line":1,"column":22,"nodeType":"181","messageId":"182","endLine":1,"endColumn":31},{"ruleId":"179","severity":1,"message":"201","line":3,"column":8,"nodeType":"181","messageId":"182","endLine":3,"endColumn":14},{"ruleId":"179","severity":1,"message":"207","line":4,"column":10,"nodeType":"181","messageId":"182","endLine":4,"endColumn":18},{"ruleId":"179","severity":1,"message":"208","line":10,"column":12,"nodeType":"181","messageId":"182","endLine":10,"endColumn":24},{"ruleId":"179","severity":1,"message":"201","line":4,"column":8,"nodeType":"181","messageId":"182","endLine":4,"endColumn":14},{"ruleId":"185","severity":1,"message":"209","line":26,"column":8,"nodeType":"187","endLine":26,"endColumn":10,"suggestions":"210"},{"ruleId":"179","severity":1,"message":"211","line":2,"column":8,"nodeType":"181","messageId":"182","endLine":2,"endColumn":13},{"ruleId":"179","severity":1,"message":"198","line":18,"column":8,"nodeType":"181","messageId":"182","endLine":18,"endColumn":17},{"ruleId":"185","severity":1,"message":"212","line":74,"column":1,"nodeType":"181","endLine":74,"endColumn":10,"suggestions":"213"},{"ruleId":"179","severity":1,"message":"211","line":2,"column":8,"nodeType":"181","messageId":"182","endLine":2,"endColumn":13},{"ruleId":"179","severity":1,"message":"198","line":17,"column":8,"nodeType":"181","messageId":"182","endLine":17,"endColumn":17},{"ruleId":"185","severity":1,"message":"212","line":52,"column":1,"nodeType":"181","endLine":52,"endColumn":10,"suggestions":"214"},{"ruleId":"179","severity":1,"message":"211","line":2,"column":8,"nodeType":"181","messageId":"182","endLine":2,"endColumn":13},{"ruleId":"179","severity":1,"message":"198","line":18,"column":8,"nodeType":"181","messageId":"182","endLine":18,"endColumn":17},{"ruleId":"185","severity":1,"message":"212","line":74,"column":1,"nodeType":"181","endLine":74,"endColumn":10,"suggestions":"215"},{"ruleId":"179","severity":1,"message":"216","line":94,"column":25,"nodeType":"181","messageId":"182","endLine":94,"endColumn":34},{"ruleId":"179","severity":1,"message":"211","line":2,"column":8,"nodeType":"181","messageId":"182","endLine":2,"endColumn":13},{"ruleId":"179","severity":1,"message":"198","line":17,"column":8,"nodeType":"181","messageId":"182","endLine":17,"endColumn":17},{"ruleId":"185","severity":1,"message":"212","line":52,"column":1,"nodeType":"181","endLine":52,"endColumn":10,"suggestions":"217"},{"ruleId":"179","severity":1,"message":"216","line":72,"column":25,"nodeType":"181","messageId":"182","endLine":72,"endColumn":34},{"ruleId":"179","severity":1,"message":"211","line":2,"column":8,"nodeType":"181","messageId":"182","endLine":2,"endColumn":13},{"ruleId":"179","severity":1,"message":"218","line":5,"column":9,"nodeType":"181","messageId":"182","endLine":5,"endColumn":13},{"ruleId":"179","severity":1,"message":"198","line":19,"column":8,"nodeType":"181","messageId":"182","endLine":19,"endColumn":17},{"ruleId":"185","severity":1,"message":"212","line":74,"column":1,"nodeType":"181","endLine":74,"endColumn":10,"suggestions":"219"},{"ruleId":"179","severity":1,"message":"220","line":2,"column":10,"nodeType":"181","messageId":"182","endLine":2,"endColumn":23},{"ruleId":"221","severity":1,"message":"222","line":55,"column":11,"nodeType":"223","messageId":"224","endLine":55,"endColumn":17},{"ruleId":"221","severity":1,"message":"222","line":75,"column":11,"nodeType":"223","messageId":"224","endLine":75,"endColumn":17},"no-native-reassign",["225"],"no-negated-in-lhs",["226"],"no-unused-vars","'setName' is assigned a value but never used.","Identifier","unusedVar","'setRole' is assigned a value but never used.","'height' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getToken'. Either include it or remove the dependency array.","ArrayExpression",["227"],["228"],"React Hook useEffect has missing dependencies: 'props.session' and 'setIsLoading'. Either include them or remove the dependency array.",["229"],"'tag' is assigned a value but never used.","'start' is assigned a value but never used.","'setStart' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.session' and 'topicId'. Either include them or remove the dependency array.",["230"],["231"],"'isLoading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'meetingId', 'props.session', 'setIsLoading', 'update', and 'updateFunc'. Either include them or remove the dependency array.",["232"],"'moment' is defined but never used.",["233"],"'email' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.session' and 'userId'. Either include them or remove the dependency array.",["234"],"'useEffect' is defined but never used.","'listTags' is defined but never used.","'setIsLoading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.session' and 'tagId'. Either include them or remove the dependency array.",["235"],"'axios' is defined but never used.","React Hook useEffect contains a call to 'setUpdate'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [update, setIsLoading, updateFunc] as a second argument to the useEffect Hook.",["236"],["237"],["238"],"'startTime' is assigned a value but never used.",["239"],"'Link' is defined but never used.",["240"],"'deleteMeeting' is defined but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","no-global-assign","no-unsafe-negation",{"desc":"241","fix":"242"},{"desc":"241","fix":"243"},{"desc":"244","fix":"245"},{"desc":"246","fix":"247"},{"desc":"244","fix":"248"},{"desc":"249","fix":"250"},{"desc":"244","fix":"251"},{"desc":"252","fix":"253"},{"desc":"254","fix":"255"},{"desc":"256","fix":"257"},{"desc":"256","fix":"258"},{"desc":"256","fix":"259"},{"desc":"256","fix":"260"},{"desc":"256","fix":"261"},"Update the dependencies array to be: [getToken, session]",{"range":"262","text":"263"},{"range":"264","text":"263"},"Update the dependencies array to be: [props.session, setIsLoading]",{"range":"265","text":"266"},"Update the dependencies array to be: [props.session, topicId]",{"range":"267","text":"268"},{"range":"269","text":"266"},"Update the dependencies array to be: [meetingId, props.session, setIsLoading, update, updateFunc]",{"range":"270","text":"271"},{"range":"272","text":"266"},"Update the dependencies array to be: [props.session, userId]",{"range":"273","text":"274"},"Update the dependencies array to be: [props.session, tagId]",{"range":"275","text":"276"},"Add dependencies array: [update, setIsLoading, updateFunc]",{"range":"277","text":"278"},{"range":"279","text":"278"},{"range":"280","text":"278"},{"range":"281","text":"278"},{"range":"282","text":"278"},[868,877],"[getToken, session]",[1679,1688],[746,748],"[props.session, setIsLoading]",[1034,1036],"[props.session, topicId]",[756,758],[2178,2180],"[meetingId, props.session, setIsLoading, update, updateFunc]",[768,770],[1044,1046],"[props.session, userId]",[786,788],"[props.session, tagId]",[2323,2323],", [update, setIsLoading, updateFunc]",[1644,1644],[2319,2319],[1634,1634],[2325,2325]]